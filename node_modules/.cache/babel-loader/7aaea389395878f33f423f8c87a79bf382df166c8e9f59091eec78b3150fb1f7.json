{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stage = exports.stages = void 0;\nconst Util_1 = require(\"./Util\");\nconst Factory_1 = require(\"./Factory\");\nconst Container_1 = require(\"./Container\");\nconst Global_1 = require(\"./Global\");\nconst Canvas_1 = require(\"./Canvas\");\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\nconst Global_2 = require(\"./Global\");\nconst PointerEvents = require(\"./PointerEvents\");\nvar STAGE = 'Stage',\n  STRING = 'string',\n  PX = 'px',\n  MOUSEOUT = 'mouseout',\n  MOUSELEAVE = 'mouseleave',\n  MOUSEOVER = 'mouseover',\n  MOUSEENTER = 'mouseenter',\n  MOUSEMOVE = 'mousemove',\n  MOUSEDOWN = 'mousedown',\n  MOUSEUP = 'mouseup',\n  POINTERMOVE = 'pointermove',\n  POINTERDOWN = 'pointerdown',\n  POINTERUP = 'pointerup',\n  POINTERCANCEL = 'pointercancel',\n  LOSTPOINTERCAPTURE = 'lostpointercapture',\n  POINTEROUT = 'pointerout',\n  POINTERLEAVE = 'pointerleave',\n  POINTEROVER = 'pointerover',\n  POINTERENTER = 'pointerenter',\n  CONTEXTMENU = 'contextmenu',\n  TOUCHSTART = 'touchstart',\n  TOUCHEND = 'touchend',\n  TOUCHMOVE = 'touchmove',\n  TOUCHCANCEL = 'touchcancel',\n  WHEEL = 'wheel',\n  MAX_LAYERS_NUMBER = 5,\n  EVENTS = [[MOUSEENTER, '_pointerenter'], [MOUSEDOWN, '_pointerdown'], [MOUSEMOVE, '_pointermove'], [MOUSEUP, '_pointerup'], [MOUSELEAVE, '_pointerleave'], [TOUCHSTART, '_pointerdown'], [TOUCHMOVE, '_pointermove'], [TOUCHEND, '_pointerup'], [TOUCHCANCEL, '_pointercancel'], [MOUSEOVER, '_pointerover'], [WHEEL, '_wheel'], [CONTEXTMENU, '_contextmenu'], [POINTERDOWN, '_pointerdown'], [POINTERMOVE, '_pointermove'], [POINTERUP, '_pointerup'], [POINTERCANCEL, '_pointercancel'], [LOSTPOINTERCAPTURE, '_lostpointercapture']];\nconst EVENTS_MAP = {\n  mouse: {\n    [POINTEROUT]: MOUSEOUT,\n    [POINTERLEAVE]: MOUSELEAVE,\n    [POINTEROVER]: MOUSEOVER,\n    [POINTERENTER]: MOUSEENTER,\n    [POINTERMOVE]: MOUSEMOVE,\n    [POINTERDOWN]: MOUSEDOWN,\n    [POINTERUP]: MOUSEUP,\n    [POINTERCANCEL]: 'mousecancel',\n    pointerclick: 'click',\n    pointerdblclick: 'dblclick'\n  },\n  touch: {\n    [POINTEROUT]: 'touchout',\n    [POINTERLEAVE]: 'touchleave',\n    [POINTEROVER]: 'touchover',\n    [POINTERENTER]: 'touchenter',\n    [POINTERMOVE]: TOUCHMOVE,\n    [POINTERDOWN]: TOUCHSTART,\n    [POINTERUP]: TOUCHEND,\n    [POINTERCANCEL]: TOUCHCANCEL,\n    pointerclick: 'tap',\n    pointerdblclick: 'dbltap'\n  },\n  pointer: {\n    [POINTEROUT]: POINTEROUT,\n    [POINTERLEAVE]: POINTERLEAVE,\n    [POINTEROVER]: POINTEROVER,\n    [POINTERENTER]: POINTERENTER,\n    [POINTERMOVE]: POINTERMOVE,\n    [POINTERDOWN]: POINTERDOWN,\n    [POINTERUP]: POINTERUP,\n    [POINTERCANCEL]: POINTERCANCEL,\n    pointerclick: 'pointerclick',\n    pointerdblclick: 'pointerdblclick'\n  }\n};\nconst getEventType = type => {\n  if (type.indexOf('pointer') >= 0) {\n    return 'pointer';\n  }\n  if (type.indexOf('touch') >= 0) {\n    return 'touch';\n  }\n  return 'mouse';\n};\nconst getEventsMap = eventType => {\n  const type = getEventType(eventType);\n  if (type === 'pointer') {\n    return Global_1.Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n  }\n  if (type === 'touch') {\n    return EVENTS_MAP.touch;\n  }\n  if (type === 'mouse') {\n    return EVENTS_MAP.mouse;\n  }\n};\nfunction checkNoClip(attrs = {}) {\n  if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n    Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n  }\n  return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nexports.stages = [];\nclass Stage extends Container_1.Container {\n  constructor(config) {\n    super(checkNoClip(config));\n    this._pointerPositions = [];\n    this._changedPointerPositions = [];\n    this._buildDOM();\n    this._bindContentEvents();\n    exports.stages.push(this);\n    this.on('widthChange.konva heightChange.konva', this._resizeDOM);\n    this.on('visibleChange.konva', this._checkVisibility);\n    this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\n      checkNoClip(this.attrs);\n    });\n    this._checkVisibility();\n  }\n  _validateAdd(child) {\n    const isLayer = child.getType() === 'Layer';\n    const isFastLayer = child.getType() === 'FastLayer';\n    const valid = isLayer || isFastLayer;\n    if (!valid) {\n      Util_1.Util.throw('You may only add layers to the stage.');\n    }\n  }\n  _checkVisibility() {\n    if (!this.content) {\n      return;\n    }\n    const style = this.visible() ? '' : 'none';\n    this.content.style.display = style;\n  }\n  setContainer(container) {\n    if (typeof container === STRING) {\n      if (container.charAt(0) === '.') {\n        var className = container.slice(1);\n        container = document.getElementsByClassName(className)[0];\n      } else {\n        var id;\n        if (container.charAt(0) !== '#') {\n          id = container;\n        } else {\n          id = container.slice(1);\n        }\n        container = document.getElementById(id);\n      }\n      if (!container) {\n        throw 'Can not find container in document with id ' + id;\n      }\n    }\n    this._setAttr('container', container);\n    if (this.content) {\n      if (this.content.parentElement) {\n        this.content.parentElement.removeChild(this.content);\n      }\n      container.appendChild(this.content);\n    }\n    return this;\n  }\n  shouldDrawHit() {\n    return true;\n  }\n  clear() {\n    var layers = this.children,\n      len = layers.length,\n      n;\n    for (n = 0; n < len; n++) {\n      layers[n].clear();\n    }\n    return this;\n  }\n  clone(obj) {\n    if (!obj) {\n      obj = {};\n    }\n    obj.container = typeof document !== 'undefined' && document.createElement('div');\n    return Container_1.Container.prototype.clone.call(this, obj);\n  }\n  destroy() {\n    super.destroy();\n    var content = this.content;\n    if (content && Util_1.Util._isInDocument(content)) {\n      this.container().removeChild(content);\n    }\n    var index = exports.stages.indexOf(this);\n    if (index > -1) {\n      exports.stages.splice(index, 1);\n    }\n    Util_1.Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n    return this;\n  }\n  getPointerPosition() {\n    const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n    if (!pos) {\n      Util_1.Util.warn(NO_POINTERS_MESSAGE);\n      return null;\n    }\n    return {\n      x: pos.x,\n      y: pos.y\n    };\n  }\n  _getPointerById(id) {\n    return this._pointerPositions.find(p => p.id === id);\n  }\n  getPointersPositions() {\n    return this._pointerPositions;\n  }\n  getStage() {\n    return this;\n  }\n  getContent() {\n    return this.content;\n  }\n  _toKonvaCanvas(config) {\n    config = config || {};\n    config.x = config.x || 0;\n    config.y = config.y || 0;\n    config.width = config.width || this.width();\n    config.height = config.height || this.height();\n    var canvas = new Canvas_1.SceneCanvas({\n      width: config.width,\n      height: config.height,\n      pixelRatio: config.pixelRatio || 1\n    });\n    var _context = canvas.getContext()._context;\n    var layers = this.children;\n    if (config.x || config.y) {\n      _context.translate(-1 * config.x, -1 * config.y);\n    }\n    layers.forEach(function (layer) {\n      if (!layer.isVisible()) {\n        return;\n      }\n      var layerCanvas = layer._toKonvaCanvas(config);\n      _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n    });\n    return canvas;\n  }\n  getIntersection(pos) {\n    if (!pos) {\n      return null;\n    }\n    var layers = this.children,\n      len = layers.length,\n      end = len - 1,\n      n;\n    for (n = end; n >= 0; n--) {\n      const shape = layers[n].getIntersection(pos);\n      if (shape) {\n        return shape;\n      }\n    }\n    return null;\n  }\n  _resizeDOM() {\n    var width = this.width();\n    var height = this.height();\n    if (this.content) {\n      this.content.style.width = width + PX;\n      this.content.style.height = height + PX;\n    }\n    this.bufferCanvas.setSize(width, height);\n    this.bufferHitCanvas.setSize(width, height);\n    this.children.forEach(layer => {\n      layer.setSize({\n        width,\n        height\n      });\n      layer.draw();\n    });\n  }\n  add(layer, ...rest) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n      return this;\n    }\n    super.add(layer);\n    var length = this.children.length;\n    if (length > MAX_LAYERS_NUMBER) {\n      Util_1.Util.warn('The stage has ' + length + ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n    }\n    layer.setSize({\n      width: this.width(),\n      height: this.height()\n    });\n    layer.draw();\n    if (Global_1.Konva.isBrowser) {\n      this.content.appendChild(layer.canvas._canvas);\n    }\n    return this;\n  }\n  getParent() {\n    return null;\n  }\n  getLayer() {\n    return null;\n  }\n  hasPointerCapture(pointerId) {\n    return PointerEvents.hasPointerCapture(pointerId, this);\n  }\n  setPointerCapture(pointerId) {\n    PointerEvents.setPointerCapture(pointerId, this);\n  }\n  releaseCapture(pointerId) {\n    PointerEvents.releaseCapture(pointerId, this);\n  }\n  getLayers() {\n    return this.children;\n  }\n  _bindContentEvents() {\n    if (!Global_1.Konva.isBrowser) {\n      return;\n    }\n    EVENTS.forEach(([event, methodName]) => {\n      this.content.addEventListener(event, evt => {\n        this[methodName](evt);\n      }, {\n        passive: false\n      });\n    });\n  }\n  _pointerenter(evt) {\n    this.setPointersPositions(evt);\n    const events = getEventsMap(evt.type);\n    if (events) {\n      this._fire(events.pointerenter, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }\n  _pointerover(evt) {\n    this.setPointersPositions(evt);\n    const events = getEventsMap(evt.type);\n    if (events) {\n      this._fire(events.pointerover, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }\n  _getTargetShape(evenType) {\n    let shape = this[evenType + 'targetShape'];\n    if (shape && !shape.getStage()) {\n      shape = null;\n    }\n    return shape;\n  }\n  _pointerleave(evt) {\n    const events = getEventsMap(evt.type);\n    const eventType = getEventType(evt.type);\n    if (!events) {\n      return;\n    }\n    this.setPointersPositions(evt);\n    var targetShape = this._getTargetShape(eventType);\n    var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n    if (targetShape && eventsEnabled) {\n      targetShape._fireAndBubble(events.pointerout, {\n        evt: evt\n      });\n      targetShape._fireAndBubble(events.pointerleave, {\n        evt: evt\n      });\n      this._fire(events.pointerleave, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n      this[eventType + 'targetShape'] = null;\n    } else if (eventsEnabled) {\n      this._fire(events.pointerleave, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n      this._fire(events.pointerout, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n    this.pointerPos = null;\n    this._pointerPositions = [];\n  }\n  _pointerdown(evt) {\n    const events = getEventsMap(evt.type);\n    const eventType = getEventType(evt.type);\n    if (!events) {\n      return;\n    }\n    this.setPointersPositions(evt);\n    var triggeredOnShape = false;\n    this._changedPointerPositions.forEach(pos => {\n      var shape = this.getIntersection(pos);\n      DragAndDrop_1.DD.justDragged = false;\n      Global_1.Konva['_' + eventType + 'ListenClick'] = true;\n      if (!shape || !shape.isListening()) {\n        return;\n      }\n      if (Global_1.Konva.capturePointerEventsEnabled) {\n        shape.setPointerCapture(pos.id);\n      }\n      this[eventType + 'ClickStartShape'] = shape;\n      shape._fireAndBubble(events.pointerdown, {\n        evt: evt,\n        pointerId: pos.id\n      });\n      triggeredOnShape = true;\n      const isTouch = evt.type.indexOf('touch') >= 0;\n      if (shape.preventDefault() && evt.cancelable && isTouch) {\n        evt.preventDefault();\n      }\n    });\n    if (!triggeredOnShape) {\n      this._fire(events.pointerdown, {\n        evt: evt,\n        target: this,\n        currentTarget: this,\n        pointerId: this._pointerPositions[0].id\n      });\n    }\n  }\n  _pointermove(evt) {\n    const events = getEventsMap(evt.type);\n    const eventType = getEventType(evt.type);\n    if (!events) {\n      return;\n    }\n    if (DragAndDrop_1.DD.isDragging && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\n      evt.preventDefault();\n    }\n    this.setPointersPositions(evt);\n    var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n    if (!eventsEnabled) {\n      return;\n    }\n    var processedShapesIds = {};\n    let triggeredOnShape = false;\n    var targetShape = this._getTargetShape(eventType);\n    this._changedPointerPositions.forEach(pos => {\n      const shape = PointerEvents.getCapturedShape(pos.id) || this.getIntersection(pos);\n      const pointerId = pos.id;\n      const event = {\n        evt: evt,\n        pointerId\n      };\n      var differentTarget = targetShape !== shape;\n      if (differentTarget && targetShape) {\n        targetShape._fireAndBubble(events.pointerout, {\n          ...event\n        }, shape);\n        targetShape._fireAndBubble(events.pointerleave, {\n          ...event\n        }, shape);\n      }\n      if (shape) {\n        if (processedShapesIds[shape._id]) {\n          return;\n        }\n        processedShapesIds[shape._id] = true;\n      }\n      if (shape && shape.isListening()) {\n        triggeredOnShape = true;\n        if (differentTarget) {\n          shape._fireAndBubble(events.pointerover, {\n            ...event\n          }, targetShape);\n          shape._fireAndBubble(events.pointerenter, {\n            ...event\n          }, targetShape);\n          this[eventType + 'targetShape'] = shape;\n        }\n        shape._fireAndBubble(events.pointermove, {\n          ...event\n        });\n      } else {\n        if (targetShape) {\n          this._fire(events.pointerover, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n            pointerId\n          });\n          this[eventType + 'targetShape'] = null;\n        }\n      }\n    });\n    if (!triggeredOnShape) {\n      this._fire(events.pointermove, {\n        evt: evt,\n        target: this,\n        currentTarget: this,\n        pointerId: this._changedPointerPositions[0].id\n      });\n    }\n  }\n  _pointerup(evt) {\n    const events = getEventsMap(evt.type);\n    const eventType = getEventType(evt.type);\n    if (!events) {\n      return;\n    }\n    this.setPointersPositions(evt);\n    const clickStartShape = this[eventType + 'ClickStartShape'];\n    const clickEndShape = this[eventType + 'ClickEndShape'];\n    var processedShapesIds = {};\n    let triggeredOnShape = false;\n    this._changedPointerPositions.forEach(pos => {\n      const shape = PointerEvents.getCapturedShape(pos.id) || this.getIntersection(pos);\n      if (shape) {\n        shape.releaseCapture(pos.id);\n        if (processedShapesIds[shape._id]) {\n          return;\n        }\n        processedShapesIds[shape._id] = true;\n      }\n      const pointerId = pos.id;\n      const event = {\n        evt: evt,\n        pointerId\n      };\n      let fireDblClick = false;\n      if (Global_1.Konva['_' + eventType + 'InDblClickWindow']) {\n        fireDblClick = true;\n        clearTimeout(this[eventType + 'DblTimeout']);\n      } else if (!DragAndDrop_1.DD.justDragged) {\n        Global_1.Konva['_' + eventType + 'InDblClickWindow'] = true;\n        clearTimeout(this[eventType + 'DblTimeout']);\n      }\n      this[eventType + 'DblTimeout'] = setTimeout(function () {\n        Global_1.Konva['_' + eventType + 'InDblClickWindow'] = false;\n      }, Global_1.Konva.dblClickWindow);\n      if (shape && shape.isListening()) {\n        triggeredOnShape = true;\n        this[eventType + 'ClickEndShape'] = shape;\n        shape._fireAndBubble(events.pointerup, {\n          ...event\n        });\n        if (Global_1.Konva['_' + eventType + 'ListenClick'] && clickStartShape && clickStartShape === shape) {\n          shape._fireAndBubble(events.pointerclick, {\n            ...event\n          });\n          if (fireDblClick && clickEndShape && clickEndShape === shape) {\n            shape._fireAndBubble(events.pointerdblclick, {\n              ...event\n            });\n          }\n        }\n      } else {\n        this[eventType + 'ClickEndShape'] = null;\n        if (Global_1.Konva['_' + eventType + 'ListenClick']) {\n          this._fire(events.pointerclick, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n            pointerId\n          });\n        }\n        if (fireDblClick) {\n          this._fire(events.pointerdblclick, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n            pointerId\n          });\n        }\n      }\n    });\n    if (!triggeredOnShape) {\n      this._fire(events.pointerup, {\n        evt: evt,\n        target: this,\n        currentTarget: this,\n        pointerId: this._changedPointerPositions[0].id\n      });\n    }\n    Global_1.Konva['_' + eventType + 'ListenClick'] = false;\n    if (evt.cancelable && eventType !== 'touch') {\n      evt.preventDefault();\n    }\n  }\n  _contextmenu(evt) {\n    this.setPointersPositions(evt);\n    var shape = this.getIntersection(this.getPointerPosition());\n    if (shape && shape.isListening()) {\n      shape._fireAndBubble(CONTEXTMENU, {\n        evt: evt\n      });\n    } else {\n      this._fire(CONTEXTMENU, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }\n  _wheel(evt) {\n    this.setPointersPositions(evt);\n    var shape = this.getIntersection(this.getPointerPosition());\n    if (shape && shape.isListening()) {\n      shape._fireAndBubble(WHEEL, {\n        evt: evt\n      });\n    } else {\n      this._fire(WHEEL, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }\n  _pointercancel(evt) {\n    this.setPointersPositions(evt);\n    const shape = PointerEvents.getCapturedShape(evt.pointerId) || this.getIntersection(this.getPointerPosition());\n    if (shape) {\n      shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n    }\n    PointerEvents.releaseCapture(evt.pointerId);\n  }\n  _lostpointercapture(evt) {\n    PointerEvents.releaseCapture(evt.pointerId);\n  }\n  setPointersPositions(evt) {\n    var contentPosition = this._getContentPosition(),\n      x = null,\n      y = null;\n    evt = evt ? evt : window.event;\n    if (evt.touches !== undefined) {\n      this._pointerPositions = [];\n      this._changedPointerPositions = [];\n      Array.prototype.forEach.call(evt.touches, touch => {\n        this._pointerPositions.push({\n          id: touch.identifier,\n          x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n          y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n        });\n      });\n      Array.prototype.forEach.call(evt.changedTouches || evt.touches, touch => {\n        this._changedPointerPositions.push({\n          id: touch.identifier,\n          x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n          y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n        });\n      });\n    } else {\n      x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n      y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n      this.pointerPos = {\n        x: x,\n        y: y\n      };\n      this._pointerPositions = [{\n        x,\n        y,\n        id: Util_1.Util._getFirstPointerId(evt)\n      }];\n      this._changedPointerPositions = [{\n        x,\n        y,\n        id: Util_1.Util._getFirstPointerId(evt)\n      }];\n    }\n  }\n  _setPointerPosition(evt) {\n    Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n    this.setPointersPositions(evt);\n  }\n  _getContentPosition() {\n    if (!this.content || !this.content.getBoundingClientRect) {\n      return {\n        top: 0,\n        left: 0,\n        scaleX: 1,\n        scaleY: 1\n      };\n    }\n    var rect = this.content.getBoundingClientRect();\n    return {\n      top: rect.top,\n      left: rect.left,\n      scaleX: rect.width / this.content.clientWidth || 1,\n      scaleY: rect.height / this.content.clientHeight || 1\n    };\n  }\n  _buildDOM() {\n    this.bufferCanvas = new Canvas_1.SceneCanvas({\n      width: this.width(),\n      height: this.height()\n    });\n    this.bufferHitCanvas = new Canvas_1.HitCanvas({\n      pixelRatio: 1,\n      width: this.width(),\n      height: this.height()\n    });\n    if (!Global_1.Konva.isBrowser) {\n      return;\n    }\n    var container = this.container();\n    if (!container) {\n      throw 'Stage has no container. A container is required.';\n    }\n    container.innerHTML = '';\n    this.content = document.createElement('div');\n    this.content.style.position = 'relative';\n    this.content.style.userSelect = 'none';\n    this.content.className = 'konvajs-content';\n    this.content.setAttribute('role', 'presentation');\n    container.appendChild(this.content);\n    this._resizeDOM();\n  }\n  cache() {\n    Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n    return this;\n  }\n  clearCache() {\n    return this;\n  }\n  batchDraw() {\n    this.getChildren().forEach(function (layer) {\n      layer.batchDraw();\n    });\n    return this;\n  }\n}\nexports.Stage = Stage;\nStage.prototype.nodeType = STAGE;\n(0, Global_2._registerNode)(Stage);\nFactory_1.Factory.addGetterSetter(Stage, 'container');","map":{"version":3,"names":["require","Object","defineProperty","exports","value","Stage","stages","Util_1","Factory_1","Container_1","Global_1","Canvas_1","DragAndDrop_1","Global_2","PointerEvents","STAGE","STRING","PX","MOUSEOUT","MOUSELEAVE","MOUSEOVER","MOUSEENTER","MOUSEMOVE","MOUSEDOWN","MOUSEUP","POINTERMOVE","POINTERDOWN","POINTERUP","POINTERCANCEL","LOSTPOINTERCAPTURE","POINTEROUT","POINTERLEAVE","POINTEROVER","POINTERENTER","CONTEXTMENU","TOUCHSTART","TOUCHEND","TOUCHMOVE","TOUCHCANCEL","WHEEL","MAX_LAYERS_NUMBER","EVENTS","EVENTS_MAP","mouse","pointerclick","pointerdblclick","touch","pointer","getEventType","type","indexOf","getEventsMap","eventType","Konva","pointerEventsEnabled","checkNoClip","attrs","clipFunc","clipWidth","clipHeight","Util","warn","NO_POINTERS_MESSAGE","Container","constructor","config","_pointerPositions","_changedPointerPositions","_buildDOM","_bindContentEvents","push","on","_resizeDOM","_checkVisibility","_validateAdd","child","isLayer","getType","isFastLayer","valid","throw","content","style","visible","display","setContainer","container","charAt","className","slice","document","getElementsByClassName","id","getElementById","_setAttr","parentElement","removeChild","appendChild","shouldDrawHit","clear","layers","children","len","length","n","clone","obj","createElement","prototype","call","destroy","_isInDocument","index","splice","releaseCanvas","bufferCanvas","_canvas","bufferHitCanvas","getPointerPosition","pos","x","y","_getPointerById","find","p","getPointersPositions","getStage","getContent","_toKonvaCanvas","width","height","canvas","SceneCanvas","pixelRatio","_context","getContext","translate","forEach","layer","isVisible","layerCanvas","drawImage","getWidth","getPixelRatio","getHeight","getIntersection","end","shape","setSize","draw","add","rest","arguments","i","isBrowser","getParent","getLayer","hasPointerCapture","pointerId","setPointerCapture","releaseCapture","getLayers","event","methodName","addEventListener","evt","passive","_pointerenter","setPointersPositions","events","_fire","pointerenter","target","currentTarget","_pointerover","pointerover","_getTargetShape","evenType","_pointerleave","targetShape","eventsEnabled","DD","isDragging","hitOnDragEnabled","_fireAndBubble","pointerout","pointerleave","pointerPos","_pointerdown","triggeredOnShape","justDragged","isListening","capturePointerEventsEnabled","pointerdown","isTouch","preventDefault","cancelable","_pointermove","node","processedShapesIds","getCapturedShape","differentTarget","_id","pointermove","_pointerup","clickStartShape","clickEndShape","fireDblClick","clearTimeout","setTimeout","dblClickWindow","pointerup","_contextmenu","_wheel","_pointercancel","createEvent","_lostpointercapture","contentPosition","_getContentPosition","window","touches","undefined","Array","identifier","clientX","left","scaleX","clientY","top","scaleY","changedTouches","_getFirstPointerId","_setPointerPosition","getBoundingClientRect","rect","clientWidth","clientHeight","HitCanvas","innerHTML","position","userSelect","setAttribute","cache","clearCache","batchDraw","getChildren","nodeType","_registerNode","Factory","addGetterSetter"],"sources":["C:/Users/Al-Gawad/node_modules/konva/lib/Stage.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stage = exports.stages = void 0;\nconst Util_1 = require(\"./Util\");\nconst Factory_1 = require(\"./Factory\");\nconst Container_1 = require(\"./Container\");\nconst Global_1 = require(\"./Global\");\nconst Canvas_1 = require(\"./Canvas\");\nconst DragAndDrop_1 = require(\"./DragAndDrop\");\nconst Global_2 = require(\"./Global\");\nconst PointerEvents = require(\"./PointerEvents\");\nvar STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', POINTEROUT = 'pointerout', POINTERLEAVE = 'pointerleave', POINTEROVER = 'pointerover', POINTERENTER = 'pointerenter', CONTEXTMENU = 'contextmenu', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TOUCHMOVE = 'touchmove', TOUCHCANCEL = 'touchcancel', WHEEL = 'wheel', MAX_LAYERS_NUMBER = 5, EVENTS = [\n    [MOUSEENTER, '_pointerenter'],\n    [MOUSEDOWN, '_pointerdown'],\n    [MOUSEMOVE, '_pointermove'],\n    [MOUSEUP, '_pointerup'],\n    [MOUSELEAVE, '_pointerleave'],\n    [TOUCHSTART, '_pointerdown'],\n    [TOUCHMOVE, '_pointermove'],\n    [TOUCHEND, '_pointerup'],\n    [TOUCHCANCEL, '_pointercancel'],\n    [MOUSEOVER, '_pointerover'],\n    [WHEEL, '_wheel'],\n    [CONTEXTMENU, '_contextmenu'],\n    [POINTERDOWN, '_pointerdown'],\n    [POINTERMOVE, '_pointermove'],\n    [POINTERUP, '_pointerup'],\n    [POINTERCANCEL, '_pointercancel'],\n    [LOSTPOINTERCAPTURE, '_lostpointercapture'],\n];\nconst EVENTS_MAP = {\n    mouse: {\n        [POINTEROUT]: MOUSEOUT,\n        [POINTERLEAVE]: MOUSELEAVE,\n        [POINTEROVER]: MOUSEOVER,\n        [POINTERENTER]: MOUSEENTER,\n        [POINTERMOVE]: MOUSEMOVE,\n        [POINTERDOWN]: MOUSEDOWN,\n        [POINTERUP]: MOUSEUP,\n        [POINTERCANCEL]: 'mousecancel',\n        pointerclick: 'click',\n        pointerdblclick: 'dblclick',\n    },\n    touch: {\n        [POINTEROUT]: 'touchout',\n        [POINTERLEAVE]: 'touchleave',\n        [POINTEROVER]: 'touchover',\n        [POINTERENTER]: 'touchenter',\n        [POINTERMOVE]: TOUCHMOVE,\n        [POINTERDOWN]: TOUCHSTART,\n        [POINTERUP]: TOUCHEND,\n        [POINTERCANCEL]: TOUCHCANCEL,\n        pointerclick: 'tap',\n        pointerdblclick: 'dbltap',\n    },\n    pointer: {\n        [POINTEROUT]: POINTEROUT,\n        [POINTERLEAVE]: POINTERLEAVE,\n        [POINTEROVER]: POINTEROVER,\n        [POINTERENTER]: POINTERENTER,\n        [POINTERMOVE]: POINTERMOVE,\n        [POINTERDOWN]: POINTERDOWN,\n        [POINTERUP]: POINTERUP,\n        [POINTERCANCEL]: POINTERCANCEL,\n        pointerclick: 'pointerclick',\n        pointerdblclick: 'pointerdblclick',\n    },\n};\nconst getEventType = (type) => {\n    if (type.indexOf('pointer') >= 0) {\n        return 'pointer';\n    }\n    if (type.indexOf('touch') >= 0) {\n        return 'touch';\n    }\n    return 'mouse';\n};\nconst getEventsMap = (eventType) => {\n    const type = getEventType(eventType);\n    if (type === 'pointer') {\n        return Global_1.Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n    }\n    if (type === 'touch') {\n        return EVENTS_MAP.touch;\n    }\n    if (type === 'mouse') {\n        return EVENTS_MAP.mouse;\n    }\n};\nfunction checkNoClip(attrs = {}) {\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n        Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n    }\n    return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nexports.stages = [];\nclass Stage extends Container_1.Container {\n    constructor(config) {\n        super(checkNoClip(config));\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        this._buildDOM();\n        this._bindContentEvents();\n        exports.stages.push(this);\n        this.on('widthChange.konva heightChange.konva', this._resizeDOM);\n        this.on('visibleChange.konva', this._checkVisibility);\n        this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\n            checkNoClip(this.attrs);\n        });\n        this._checkVisibility();\n    }\n    _validateAdd(child) {\n        const isLayer = child.getType() === 'Layer';\n        const isFastLayer = child.getType() === 'FastLayer';\n        const valid = isLayer || isFastLayer;\n        if (!valid) {\n            Util_1.Util.throw('You may only add layers to the stage.');\n        }\n    }\n    _checkVisibility() {\n        if (!this.content) {\n            return;\n        }\n        const style = this.visible() ? '' : 'none';\n        this.content.style.display = style;\n    }\n    setContainer(container) {\n        if (typeof container === STRING) {\n            if (container.charAt(0) === '.') {\n                var className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            }\n            else {\n                var id;\n                if (container.charAt(0) !== '#') {\n                    id = container;\n                }\n                else {\n                    id = container.slice(1);\n                }\n                container = document.getElementById(id);\n            }\n            if (!container) {\n                throw 'Can not find container in document with id ' + id;\n            }\n        }\n        this._setAttr('container', container);\n        if (this.content) {\n            if (this.content.parentElement) {\n                this.content.parentElement.removeChild(this.content);\n            }\n            container.appendChild(this.content);\n        }\n        return this;\n    }\n    shouldDrawHit() {\n        return true;\n    }\n    clear() {\n        var layers = this.children, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            layers[n].clear();\n        }\n        return this;\n    }\n    clone(obj) {\n        if (!obj) {\n            obj = {};\n        }\n        obj.container =\n            typeof document !== 'undefined' && document.createElement('div');\n        return Container_1.Container.prototype.clone.call(this, obj);\n    }\n    destroy() {\n        super.destroy();\n        var content = this.content;\n        if (content && Util_1.Util._isInDocument(content)) {\n            this.container().removeChild(content);\n        }\n        var index = exports.stages.indexOf(this);\n        if (index > -1) {\n            exports.stages.splice(index, 1);\n        }\n        Util_1.Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n        return this;\n    }\n    getPointerPosition() {\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            Util_1.Util.warn(NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y,\n        };\n    }\n    _getPointerById(id) {\n        return this._pointerPositions.find((p) => p.id === id);\n    }\n    getPointersPositions() {\n        return this._pointerPositions;\n    }\n    getStage() {\n        return this;\n    }\n    getContent() {\n        return this.content;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.x = config.x || 0;\n        config.y = config.y || 0;\n        config.width = config.width || this.width();\n        config.height = config.height || this.height();\n        var canvas = new Canvas_1.SceneCanvas({\n            width: config.width,\n            height: config.height,\n            pixelRatio: config.pixelRatio || 1,\n        });\n        var _context = canvas.getContext()._context;\n        var layers = this.children;\n        if (config.x || config.y) {\n            _context.translate(-1 * config.x, -1 * config.y);\n        }\n        layers.forEach(function (layer) {\n            if (!layer.isVisible()) {\n                return;\n            }\n            var layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    }\n    getIntersection(pos) {\n        if (!pos) {\n            return null;\n        }\n        var layers = this.children, len = layers.length, end = len - 1, n;\n        for (n = end; n >= 0; n--) {\n            const shape = layers[n].getIntersection(pos);\n            if (shape) {\n                return shape;\n            }\n        }\n        return null;\n    }\n    _resizeDOM() {\n        var width = this.width();\n        var height = this.height();\n        if (this.content) {\n            this.content.style.width = width + PX;\n            this.content.style.height = height + PX;\n        }\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n        this.children.forEach((layer) => {\n            layer.setSize({ width, height });\n            layer.draw();\n        });\n    }\n    add(layer, ...rest) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        super.add(layer);\n        var length = this.children.length;\n        if (length > MAX_LAYERS_NUMBER) {\n            Util_1.Util.warn('The stage has ' +\n                length +\n                ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n        }\n        layer.setSize({ width: this.width(), height: this.height() });\n        layer.draw();\n        if (Global_1.Konva.isBrowser) {\n            this.content.appendChild(layer.canvas._canvas);\n        }\n        return this;\n    }\n    getParent() {\n        return null;\n    }\n    getLayer() {\n        return null;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n    getLayers() {\n        return this.children;\n    }\n    _bindContentEvents() {\n        if (!Global_1.Konva.isBrowser) {\n            return;\n        }\n        EVENTS.forEach(([event, methodName]) => {\n            this.content.addEventListener(event, (evt) => {\n                this[methodName](evt);\n            }, { passive: false });\n        });\n    }\n    _pointerenter(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        if (events) {\n            this._fire(events.pointerenter, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointerover(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        if (events) {\n            this._fire(events.pointerover, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _getTargetShape(evenType) {\n        let shape = this[evenType + 'targetShape'];\n        if (shape && !shape.getStage()) {\n            shape = null;\n        }\n        return shape;\n    }\n    _pointerleave(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var targetShape = this._getTargetShape(eventType);\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(events.pointerout, { evt: evt });\n            targetShape._fireAndBubble(events.pointerleave, { evt: evt });\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this[eventType + 'targetShape'] = null;\n        }\n        else if (eventsEnabled) {\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this._fire(events.pointerout, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n        this.pointerPos = null;\n        this._pointerPositions = [];\n    }\n    _pointerdown(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            var shape = this.getIntersection(pos);\n            DragAndDrop_1.DD.justDragged = false;\n            Global_1.Konva['_' + eventType + 'ListenClick'] = true;\n            if (!shape || !shape.isListening()) {\n                return;\n            }\n            if (Global_1.Konva.capturePointerEventsEnabled) {\n                shape.setPointerCapture(pos.id);\n            }\n            this[eventType + 'ClickStartShape'] = shape;\n            shape._fireAndBubble(events.pointerdown, {\n                evt: evt,\n                pointerId: pos.id,\n            });\n            triggeredOnShape = true;\n            const isTouch = evt.type.indexOf('touch') >= 0;\n            if (shape.preventDefault() && evt.cancelable && isTouch) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerdown, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._pointerPositions[0].id,\n            });\n        }\n    }\n    _pointermove(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        if (DragAndDrop_1.DD.isDragging && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n        }\n        this.setPointersPositions(evt);\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\n        if (!eventsEnabled) {\n            return;\n        }\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        var targetShape = this._getTargetShape(eventType);\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            var differentTarget = targetShape !== shape;\n            if (differentTarget && targetShape) {\n                targetShape._fireAndBubble(events.pointerout, { ...event }, shape);\n                targetShape._fireAndBubble(events.pointerleave, { ...event }, shape);\n            }\n            if (shape) {\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                if (differentTarget) {\n                    shape._fireAndBubble(events.pointerover, { ...event }, targetShape);\n                    shape._fireAndBubble(events.pointerenter, { ...event }, targetShape);\n                    this[eventType + 'targetShape'] = shape;\n                }\n                shape._fireAndBubble(events.pointermove, { ...event });\n            }\n            else {\n                if (targetShape) {\n                    this._fire(events.pointerover, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                    this[eventType + 'targetShape'] = null;\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointermove, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n    }\n    _pointerup(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        const clickStartShape = this[eventType + 'ClickStartShape'];\n        const clickEndShape = this[eventType + 'ClickEndShape'];\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            if (shape) {\n                shape.releaseCapture(pos.id);\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            let fireDblClick = false;\n            if (Global_1.Konva['_' + eventType + 'InDblClickWindow']) {\n                fireDblClick = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            else if (!DragAndDrop_1.DD.justDragged) {\n                Global_1.Konva['_' + eventType + 'InDblClickWindow'] = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            this[eventType + 'DblTimeout'] = setTimeout(function () {\n                Global_1.Konva['_' + eventType + 'InDblClickWindow'] = false;\n            }, Global_1.Konva.dblClickWindow);\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                this[eventType + 'ClickEndShape'] = shape;\n                shape._fireAndBubble(events.pointerup, { ...event });\n                if (Global_1.Konva['_' + eventType + 'ListenClick'] &&\n                    clickStartShape &&\n                    clickStartShape === shape) {\n                    shape._fireAndBubble(events.pointerclick, { ...event });\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                        shape._fireAndBubble(events.pointerdblclick, { ...event });\n                    }\n                }\n            }\n            else {\n                this[eventType + 'ClickEndShape'] = null;\n                if (Global_1.Konva['_' + eventType + 'ListenClick']) {\n                    this._fire(events.pointerclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n                if (fireDblClick) {\n                    this._fire(events.pointerdblclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerup, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n        Global_1.Konva['_' + eventType + 'ListenClick'] = false;\n        if (evt.cancelable && eventType !== 'touch') {\n            evt.preventDefault();\n        }\n    }\n    _contextmenu(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n        }\n        else {\n            this._fire(CONTEXTMENU, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _wheel(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(WHEEL, { evt: evt });\n        }\n        else {\n            this._fire(WHEEL, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointercancel(evt) {\n        this.setPointersPositions(evt);\n        const shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n        }\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    _lostpointercapture(evt) {\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    setPointersPositions(evt) {\n        var contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Array.prototype.forEach.call(evt.touches, (touch) => {\n                this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch) => {\n                this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n        }\n        else {\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n            this.pointerPos = {\n                x: x,\n                y: y,\n            };\n            this._pointerPositions = [{ x, y, id: Util_1.Util._getFirstPointerId(evt) }];\n            this._changedPointerPositions = [\n                { x, y, id: Util_1.Util._getFirstPointerId(evt) },\n            ];\n        }\n    }\n    _setPointerPosition(evt) {\n        Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n        this.setPointersPositions(evt);\n    }\n    _getContentPosition() {\n        if (!this.content || !this.content.getBoundingClientRect) {\n            return {\n                top: 0,\n                left: 0,\n                scaleX: 1,\n                scaleY: 1,\n            };\n        }\n        var rect = this.content.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            scaleX: rect.width / this.content.clientWidth || 1,\n            scaleY: rect.height / this.content.clientHeight || 1,\n        };\n    }\n    _buildDOM() {\n        this.bufferCanvas = new Canvas_1.SceneCanvas({\n            width: this.width(),\n            height: this.height(),\n        });\n        this.bufferHitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: 1,\n            width: this.width(),\n            height: this.height(),\n        });\n        if (!Global_1.Konva.isBrowser) {\n            return;\n        }\n        var container = this.container();\n        if (!container) {\n            throw 'Stage has no container. A container is required.';\n        }\n        container.innerHTML = '';\n        this.content = document.createElement('div');\n        this.content.style.position = 'relative';\n        this.content.style.userSelect = 'none';\n        this.content.className = 'konvajs-content';\n        this.content.setAttribute('role', 'presentation');\n        container.appendChild(this.content);\n        this._resizeDOM();\n    }\n    cache() {\n        Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n        return this;\n    }\n    clearCache() {\n        return this;\n    }\n    batchDraw() {\n        this.getChildren().forEach(function (layer) {\n            layer.batchDraw();\n        });\n        return this;\n    }\n}\nexports.Stage = Stage;\nStage.prototype.nodeType = STAGE;\n(0, Global_2._registerNode)(Stage);\nFactory_1.Factory.addGetterSetter(Stage, 'container');\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}