{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Animation = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nconst now = function () {\n  if (Global_1.glob.performance && Global_1.glob.performance.now) {\n    return function () {\n      return Global_1.glob.performance.now();\n    };\n  }\n  return function () {\n    return new Date().getTime();\n  };\n}();\nclass Animation {\n  constructor(func, layers) {\n    this.id = Animation.animIdCounter++;\n    this.frame = {\n      time: 0,\n      timeDiff: 0,\n      lastTime: now(),\n      frameRate: 0\n    };\n    this.func = func;\n    this.setLayers(layers);\n  }\n  setLayers(layers) {\n    let lays = [];\n    if (layers) {\n      lays = Array.isArray(layers) ? layers : [layers];\n    }\n    this.layers = lays;\n    return this;\n  }\n  getLayers() {\n    return this.layers;\n  }\n  addLayer(layer) {\n    const layers = this.layers;\n    const len = layers.length;\n    for (let n = 0; n < len; n++) {\n      if (layers[n]._id === layer._id) {\n        return false;\n      }\n    }\n    this.layers.push(layer);\n    return true;\n  }\n  isRunning() {\n    const a = Animation;\n    const animations = a.animations;\n    const len = animations.length;\n    for (let n = 0; n < len; n++) {\n      if (animations[n].id === this.id) {\n        return true;\n      }\n    }\n    return false;\n  }\n  start() {\n    this.stop();\n    this.frame.timeDiff = 0;\n    this.frame.lastTime = now();\n    Animation._addAnimation(this);\n    return this;\n  }\n  stop() {\n    Animation._removeAnimation(this);\n    return this;\n  }\n  _updateFrameObject(time) {\n    this.frame.timeDiff = time - this.frame.lastTime;\n    this.frame.lastTime = time;\n    this.frame.time += this.frame.timeDiff;\n    this.frame.frameRate = 1000 / this.frame.timeDiff;\n  }\n  static _addAnimation(anim) {\n    this.animations.push(anim);\n    this._handleAnimation();\n  }\n  static _removeAnimation(anim) {\n    const id = anim.id;\n    const animations = this.animations;\n    const len = animations.length;\n    for (let n = 0; n < len; n++) {\n      if (animations[n].id === id) {\n        this.animations.splice(n, 1);\n        break;\n      }\n    }\n  }\n  static _runFrames() {\n    const layerHash = {};\n    const animations = this.animations;\n    for (let n = 0; n < animations.length; n++) {\n      const anim = animations[n];\n      const layers = anim.layers;\n      const func = anim.func;\n      anim._updateFrameObject(now());\n      const layersLen = layers.length;\n      let needRedraw;\n      if (func) {\n        needRedraw = func.call(anim, anim.frame) !== false;\n      } else {\n        needRedraw = true;\n      }\n      if (!needRedraw) {\n        continue;\n      }\n      for (let i = 0; i < layersLen; i++) {\n        const layer = layers[i];\n        if (layer._id !== undefined) {\n          layerHash[layer._id] = layer;\n        }\n      }\n    }\n    for (let key in layerHash) {\n      if (!layerHash.hasOwnProperty(key)) {\n        continue;\n      }\n      layerHash[key].batchDraw();\n    }\n  }\n  static _animationLoop() {\n    const Anim = Animation;\n    if (Anim.animations.length) {\n      Anim._runFrames();\n      Util_1.Util.requestAnimFrame(Anim._animationLoop);\n    } else {\n      Anim.animRunning = false;\n    }\n  }\n  static _handleAnimation() {\n    if (!this.animRunning) {\n      this.animRunning = true;\n      Util_1.Util.requestAnimFrame(this._animationLoop);\n    }\n  }\n}\nexports.Animation = Animation;\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;","map":{"version":3,"names":["require","Object","defineProperty","exports","value","Animation","Global_1","Util_1","now","glob","performance","Date","getTime","constructor","func","layers","id","animIdCounter","frame","time","timeDiff","lastTime","frameRate","setLayers","lays","Array","isArray","getLayers","addLayer","layer","len","length","n","_id","push","isRunning","a","animations","start","stop","_addAnimation","_removeAnimation","_updateFrameObject","anim","_handleAnimation","splice","_runFrames","layerHash","layersLen","needRedraw","call","i","undefined","key","hasOwnProperty","batchDraw","_animationLoop","Anim","Util","requestAnimFrame","animRunning"],"sources":["C:/Users/Al-Gawad/node_modules/konva/lib/Animation.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Animation = void 0;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nconst now = (function () {\n    if (Global_1.glob.performance && Global_1.glob.performance.now) {\n        return function () {\n            return Global_1.glob.performance.now();\n        };\n    }\n    return function () {\n        return new Date().getTime();\n    };\n})();\nclass Animation {\n    constructor(func, layers) {\n        this.id = Animation.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: now(),\n            frameRate: 0,\n        };\n        this.func = func;\n        this.setLayers(layers);\n    }\n    setLayers(layers) {\n        let lays = [];\n        if (layers) {\n            lays = Array.isArray(layers) ? layers : [layers];\n        }\n        this.layers = lays;\n        return this;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    addLayer(layer) {\n        const layers = this.layers;\n        const len = layers.length;\n        for (let n = 0; n < len; n++) {\n            if (layers[n]._id === layer._id) {\n                return false;\n            }\n        }\n        this.layers.push(layer);\n        return true;\n    }\n    isRunning() {\n        const a = Animation;\n        const animations = a.animations;\n        const len = animations.length;\n        for (let n = 0; n < len; n++) {\n            if (animations[n].id === this.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    start() {\n        this.stop();\n        this.frame.timeDiff = 0;\n        this.frame.lastTime = now();\n        Animation._addAnimation(this);\n        return this;\n    }\n    stop() {\n        Animation._removeAnimation(this);\n        return this;\n    }\n    _updateFrameObject(time) {\n        this.frame.timeDiff = time - this.frame.lastTime;\n        this.frame.lastTime = time;\n        this.frame.time += this.frame.timeDiff;\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n    static _addAnimation(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    }\n    static _removeAnimation(anim) {\n        const id = anim.id;\n        const animations = this.animations;\n        const len = animations.length;\n        for (let n = 0; n < len; n++) {\n            if (animations[n].id === id) {\n                this.animations.splice(n, 1);\n                break;\n            }\n        }\n    }\n    static _runFrames() {\n        const layerHash = {};\n        const animations = this.animations;\n        for (let n = 0; n < animations.length; n++) {\n            const anim = animations[n];\n            const layers = anim.layers;\n            const func = anim.func;\n            anim._updateFrameObject(now());\n            const layersLen = layers.length;\n            let needRedraw;\n            if (func) {\n                needRedraw = func.call(anim, anim.frame) !== false;\n            }\n            else {\n                needRedraw = true;\n            }\n            if (!needRedraw) {\n                continue;\n            }\n            for (let i = 0; i < layersLen; i++) {\n                const layer = layers[i];\n                if (layer._id !== undefined) {\n                    layerHash[layer._id] = layer;\n                }\n            }\n        }\n        for (let key in layerHash) {\n            if (!layerHash.hasOwnProperty(key)) {\n                continue;\n            }\n            layerHash[key].batchDraw();\n        }\n    }\n    static _animationLoop() {\n        const Anim = Animation;\n        if (Anim.animations.length) {\n            Anim._runFrames();\n            Util_1.Util.requestAnimFrame(Anim._animationLoop);\n        }\n        else {\n            Anim.animRunning = false;\n        }\n    }\n    static _handleAnimation() {\n        if (!this.animRunning) {\n            this.animRunning = true;\n            Util_1.Util.requestAnimFrame(this._animationLoop);\n        }\n    }\n}\nexports.Animation = Animation;\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}