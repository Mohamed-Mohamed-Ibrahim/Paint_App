{"ast":null,"code":"import Konva from 'konva';\nvar layer = new Konva.Layer();\nvar newLine = null;\nvar newCircle = null;\nvar newEllipse = null;\nvar newTriangle = null;\nvar newRectangle = null;\nvar newSquare = null;\nlet stage, transformer;\nfunction getColorFromSpan(clickedSpan) {\n  var color = window.getComputedStyle(clickedSpan).backgroundColor;\n  return color;\n}\nexport default {\n  name: 'SideBar',\n  data() {\n    return {\n      file: \"\"\n    };\n  },\n  methods: {\n    undo: async function () {\n      // stage = new Konva.Stage({\n      //     container : 'container',\n      //     width     : window.innerWidth,\n      //     height    : window.innerHeight,\n      // }) ;\n\n      // stage.add(layer) ;\n\n      //get history from backend\n      const temp = await fetch(\"http://localhost:8080/function/undo\");\n      //get array of objects of r=the desired state\n      const desiredState = await temp.json();\n      for (let i = 0; i < len(desiredState); i++) {\n        let currentShape = desiredState[i];\n        if (currentShape[\"shape\"] === \"rectangle\") {\n          newRectangle = new Konva.Rect({\n            x: currentShape[\"x\"],\n            y: currentShape[\"y\"],\n            width: currentShape[\"width\"],\n            height: currentShape[\"height\"],\n            fill: currentShape[\"fill\"],\n            stroke: currentShape[\"stroke\"],\n            strokeWidth: 2,\n            id: currentShape[\"id\"]\n          });\n          layer.add(newRectangle);\n        } else if (currentShape[\"shape\"] === \"circle\") {\n          newCircle = new Konva.Circle({\n            x: currentShape[\"x\"],\n            y: currentShape[\"y\"],\n            radius: currentShape[\"radius\"],\n            fill: currentShape[\"fill\"],\n            stroke: currentShape[\"stroke\"],\n            strokeWidth: 2,\n            id: currentShape[\"id\"]\n          });\n          layer.add(newCircle);\n        } else if (currentShape[\"shape\"] === \"ellipse\") {\n          newEllipse = new Konva.Ellipse({\n            x: currentShape[\"x\"],\n            y: currentShape[\"y\"],\n            radiusX: currentShape[\"radiusX\"],\n            radiusY: currentShape[\"radiusY\"],\n            fill: currentShape[\"fill\"],\n            stroke: currentShape[\"stroke\"],\n            strokeWidth: 2,\n            id: currentShape[\"id\"]\n          });\n          layer.add(newEllipse);\n        } else if (currentShape[\"shape\"] === \"line\") {\n          newLine = new Konva.Line({\n            points: currentShape[\"points\"],\n            closed: currentShape[\"closed\"],\n            stroke: currentShape[\"stroke\"],\n            strokeWidth: currentShape[\"strokeWidth\"],\n            id: currentShape[\"id\"]\n          });\n          layer.add(newLine);\n        } else if (currentShape[\"shape\"] === \"triangle\") {\n          newLine = new Konva.Line({\n            points: currentShape[\"points\"],\n            closed: currentShape[\"closed\"],\n            fill: currentShape[\"fill\"],\n            stroke: currentShape[\"stroke\"],\n            strokeWidth: currentShape[\"strokeWidth\"],\n            id: currentShape[\"id\"]\n          });\n          layer.add(newLine);\n        } else if (currentShape[\"shape\"] === \"square\") {\n          newLine = new Konva.Line({\n            x: currentShape[\"x\"],\n            y: currentShape[\"y\"],\n            width: currentShape[\"width\"],\n            height: currentShape[\"height\"],\n            fill: currentShape[\"fill\"],\n            stroke: currentShape[\"stroke\"],\n            strokeWidth: 2,\n            id: currentShape[\"id\"]\n          });\n          layer.add(newLine);\n        }\n      }\n      layer.draw();\n    },\n    async saveData(e) {\n      e.preventDefault();\n      const userInfo = document.querySelector(\".saveForm\");\n      let formData = new FormData(userInfo);\n      var object = {};\n      formData.forEach((value, key) => {\n        if (key === \"JSON\") object[\"format\"] = 1;else if (key === \"XML\") object[\"format\"] = 2;else if (key === \"BOTH\") object[\"format\"] = 3;else {\n          let loc = value.substring(1, value.length - 1);\n          if (loc.includes(\"\\\\Users\")) object[key] = loc;\n        }\n      });\n      var json = JSON.stringify(object);\n      if (formData.get(\"saveLoc\")) {\n        await fetch('http://localhost:8080/function/save', {\n          method: 'post',\n          headers: {\n            'Content-type': \"application/json; charset=UTF-8\"\n          },\n          body: json\n        });\n      }\n    },\n    async loadData() {\n      const result = await fetch('http://localhost:8080/function/load', {\n        method: 'post',\n        headers: {\n          'Contect-type': 'application/json; charset=UTF-8'\n        },\n        body: this.file\n      });\n      console.log(result);\n\n      // const paint = result.json();\n\n      // console.log(paint)\n\n      // this.shapes = paint['program']\n    },\n    move: function () {\n      var stage = new Konva.Stage({\n        container: 'container',\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      stage.add(layer);\n      stage.on('click', function (e) {\n        var clickedShape = e.target;\n        if (!(clickedShape instanceof Konva.Shape)) {\n          console.log('Clicked on an unknown shape');\n          return;\n        }\n        clickedShape.draggable(!clickedShape.draggable());\n        if (clickedShape instanceof Konva.Line) {\n          clickedShape.on('click', () => {\n            clickedShape.draggable(!clickedShape.draggable());\n            layer.draw();\n          });\n        }\n      });\n    },\n    deleteShape: function () {\n      stage = new Konva.Stage({\n        container: 'container',\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      stage.add(layer);\n      stage.on('click', function (e) {\n        var clickedShape = e.target;\n        if (clickedShape instanceof Konva.Rect || clickedShape instanceof Konva.Circle || clickedShape instanceof Konva.Line || clickedShape instanceof Konva.Ellipse) {\n          clickedShape.remove();\n          layer.draw();\n        } else {\n          console.log('Clicked on an unknown shape to be deleted');\n        }\n      });\n    },\n    copySelectedShape: function () {\n      var stage = new Konva.Stage({\n        container: 'container',\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      stage.add(layer);\n      var clickedShape = null;\n      var newShape = null;\n      stage.on('click', function (e) {\n        clickedShape = e.target;\n        if (!(clickedShape instanceof Konva.Shape)) {\n          console.log('Clicked on an unknown shape to be copied');\n          return;\n        }\n        if (clickedShape instanceof Konva.Rect || clickedShape instanceof Konva.Circle || clickedShape instanceof Konva.Ellipse || clickedShape instanceof Konva.Line && clickedShape.points.length === 4) {\n          newShape = clickedShape.clone({\n            x: clickedShape.x(),\n            y: clickedShape.y()\n          });\n        } else if (clickedShape instanceof Konva.Line) {\n          var points = clickedShape.points().slice();\n          newShape = new Konva.Line({\n            points: [points[0] + 20, points[1] + 50, points[2] + 20, points[3] + 50],\n            closed: true,\n            stroke: clickedShape.stroke(),\n            strokeWidth: clickedShape.strokeWidth()\n          });\n          layer.add(newShape);\n          layer.draw();\n          return;\n        } else {\n          console.log('Clicked on an unknown shape to be copied');\n          return;\n        }\n        var pointerPos = stage.getPointerPosition();\n        newShape.x(pointerPos.x);\n        newShape.y(pointerPos.y);\n        layer.add(newShape);\n        layer.draw();\n      });\n    },\n    resize: function () {\n      stage = new Konva.Stage({\n        container: 'container',\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      stage.add(layer);\n      transformer = new Konva.Transformer({\n        enabledAnchors: ['top-right', 'top-left', 'bottom-right', 'bottom-left'],\n        rotateEnabled: false\n      });\n      layer.add(transformer);\n      stage.draw();\n      stage.on('click', e => this.selectShape(e.target));\n    },\n    selectShape(shape) {\n      if (shape) {\n        transformer.attachTo(shape);\n        const shapeType = shape.getClassName();\n        switch (shapeType) {\n          case 'Rect':\n          case 'Square':\n            transformer.nodes([shape]);\n            break;\n          case 'Circle':\n          case 'Ellipse':\n            transformer.nodes([shape]);\n            break;\n          case 'Line':\n            transformer.nodes([shape]);\n            break;\n          case 'RegularPolygon':\n            transformer.nodes([shape]);\n            break;\n          default:\n            break;\n        }\n        layer.draw();\n      }\n    },\n    deselectShape() {\n      transformer.detach();\n      layer.draw();\n    },\n    changeColor(newShape, selectedColorSpan, layer) {\n      if (newShape && selectedColorSpan) {\n        var color = getColorFromSpan(selectedColorSpan);\n        newShape.fill(color);\n        layer.draw();\n      }\n    },\n    drawLine: function () {\n      var width = window.innerWidth;\n      var height = window.innerHeight;\n      let line = document.querySelector(\".line\");\n      var stage = new Konva.Stage({\n        container: 'container',\n        width: width,\n        height: height\n      });\n      line.style.left = \"-11%\";\n      stage.add(layer);\n      var point1, point2;\n      stage.on('mousedown', function () {\n        if (!point1) {\n          point1 = stage.getPointerPosition();\n        } else {\n          point2 = stage.getPointerPosition();\n          newLine = new Konva.Line({\n            points: [point1.x, point1.y, point2.x, point2.y],\n            stroke: 'black',\n            strokeWidth: 5\n          });\n          layer.add(newLine);\n          if (newLine) {\n            const lineData = {\n              shape: \"line\",\n              points: [point1.x, point1.y, point2.x, point2.y],\n              stroke: 'black',\n              strokeWidth: 5\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(lineData)\n            });\n          }\n          point1 = null;\n          point2 = null;\n        }\n      });\n    },\n    drawCircle() {\n      var width = window.innerWidth;\n      var height = window.innerHeight;\n      let circle = document.querySelector(\".circle\");\n      let radius = document.querySelector(\"#radius\");\n      var stage = new Konva.Stage({\n        container: 'container',\n        width: width,\n        height: height\n      });\n      circle.style.left = \"-11%\";\n      radius = parseFloat(radius.value);\n      stage.add(layer);\n      var selectedColorSpan = null;\n      newEllipse = null;\n      newTriangle = null;\n      newRectangle = null;\n      newSquare = null;\n      stage.on('mousedown', () => {\n        var pos = stage.getPointerPosition();\n        newCircle = new Konva.Circle({\n          x: pos.x,\n          y: pos.y,\n          radius: radius,\n          fill: 'white',\n          stroke: 'black',\n          strokeWidth: 2\n        });\n        layer.add(newCircle);\n        if (newCircle) {\n          const CircleData = {\n            shape: 'circle',\n            x: pos.x,\n            y: pos.y,\n            radius: radius,\n            fill: 'white',\n            stroke: 'black',\n            strokeWidth: 2\n          };\n          fetch('http://localhost:8080/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(CircleData)\n          });\n          newCircle.on('transformend', () => {\n            const updatedRadius = newCircle.radius() * newCircle.scaleX();\n            const updatedCircleData = {\n              shape: 'circle',\n              x: newCircle.position().x,\n              y: newCircle.position().y,\n              radius: updatedRadius,\n              fill: newCircle.fill(),\n              stroke: 'black',\n              strokeWidth: 2\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedCircleData)\n            });\n          });\n        }\n      });\n      var colorSpans = document.querySelectorAll('.color-span');\n      colorSpans.forEach(span => {\n        span.addEventListener('click', () => {\n          selectedColorSpan = span;\n          this.changeColor(newCircle, selectedColorSpan, layer);\n          if (newCircle) {\n            const updatedRadius = newCircle.radius() * newCircle.scaleX();\n            const updatedCircleData = {\n              shape: 'circle',\n              x: newCircle.position().x,\n              y: newCircle.position().y,\n              radius: updatedRadius,\n              fill: newCircle.fill(),\n              stroke: 'black',\n              strokeWidth: 2\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedCircleData)\n            });\n          }\n        });\n      });\n    },\n    drawEllipse: function () {\n      var width = window.innerWidth;\n      var height = window.innerHeight;\n      let ellipse = document.querySelector(\".ellipse\");\n      let radiusX = document.querySelector(\"#radiusX\");\n      let radiusY = document.querySelector(\"#radiusY\");\n      var stage = new Konva.Stage({\n        container: 'container',\n        width: width,\n        height: height\n      });\n      ellipse.style.left = \"-11%\";\n      radiusX = parseFloat(radiusX.value);\n      radiusY = parseFloat(radiusY.value);\n      stage.add(layer);\n      var selectedColorSpan = null;\n      newCircle = null;\n      newTriangle = null;\n      newRectangle = null;\n      newSquare = null;\n      stage.on('mousedown', function () {\n        var pos = stage.getPointerPosition();\n        newEllipse = new Konva.Ellipse({\n          x: pos.x,\n          y: pos.y,\n          radiusX: radiusX,\n          radiusY: radiusY,\n          fill: 'white',\n          stroke: 'black',\n          strokeWidth: 2\n        });\n        layer.add(newEllipse);\n        if (newEllipse) {\n          const EllipseData = {\n            shape: 'ellipse',\n            x: pos.x,\n            y: pos.y,\n            radiusX: radiusX,\n            radiusY: radiusY,\n            fill: 'white',\n            stroke: 'black',\n            strokeWidth: 2\n          };\n          fetch('http://localhost:8080/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(EllipseData)\n          });\n          newEllipse.on('transformend', () => {\n            const updatedRadiusX = newEllipse.radiusX() * newEllipse.scaleX();\n            const updatedRadiusY = newEllipse.radiusY() * newEllipse.scaleY();\n            const updatedEllipseData = {\n              shape: 'ellipse',\n              x: newEllipse.position().x,\n              y: newEllipse.position().y,\n              radiusX: updatedRadiusX,\n              radiusY: updatedRadiusY,\n              fill: newEllipse.fill(),\n              stroke: 'black',\n              strokeWidth: 2\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedEllipseData)\n            });\n          });\n        }\n      });\n      var colorSpans = document.querySelectorAll('.color-span');\n      colorSpans.forEach(span => {\n        span.addEventListener('click', () => {\n          selectedColorSpan = span;\n          this.changeColor(newEllipse, selectedColorSpan, layer);\n          if (newEllipse) {\n            const updatedRadiusX = newEllipse.radiusX() * newEllipse.scaleX();\n            const updatedRadiusY = newEllipse.radiusY() * newEllipse.scaleY();\n            const updatedEllipseData = {\n              shape: 'ellipse',\n              x: newEllipse.position().x,\n              y: newEllipse.position().y,\n              radiusX: updatedRadiusX,\n              radiusY: updatedRadiusY,\n              fill: newEllipse.fill(),\n              stroke: 'black',\n              strokeWidth: 2\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedEllipseData)\n            });\n          }\n        });\n      });\n    },\n    drawTriangle: function () {\n      var width = window.innerWidth;\n      var height = window.innerHeight;\n      let triangle = document.querySelector(\".triangle\");\n      var stage = new Konva.Stage({\n        container: 'container',\n        width: width,\n        height: height\n      });\n      triangle.style.left = \"-11%\";\n      stage.add(layer);\n      var point1, point2, point3;\n      var selectedColorSpan = null;\n      newCircle = null;\n      newEllipse = null;\n      newRectangle = null;\n      newSquare = null;\n      stage.on('mousedown', function () {\n        if (!point1) point1 = stage.getPointerPosition();else if (!point2) point2 = stage.getPointerPosition();else {\n          point3 = stage.getPointerPosition();\n          newTriangle = new Konva.Line({\n            points: [point1.x, point1.y, point2.x, point2.y, point3.x, point3.y],\n            closed: true,\n            stroke: 'black',\n            strokeWidth: 2\n          });\n          layer.add(newTriangle);\n          if (newTriangle) {\n            const TriangleData = {\n              shape: 'triangle',\n              points: [point1.x, point1.y, point2.x, point2.y, point3.x, point3.y],\n              closed: true,\n              fill: 'white',\n              stroke: 'black',\n              strokeWidth: 2\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(TriangleData)\n            });\n            newTriangle.on('transformend', () => {\n              const scaleX = newTriangle.scaleX();\n              const scaleY = newTriangle.scaleY();\n              const originalPoints = [newTriangle.points()[0], newTriangle.points()[1], newTriangle.points()[2], newTriangle.points()[3], newTriangle.points()[4], newTriangle.points()[5]];\n              const updatedPoints = originalPoints.map((point, index) => index % 2 === 0 ? point * scaleX : point * scaleY);\n              const updatedTriangleData = {\n                shape: 'triangle',\n                points: updatedPoints,\n                closed: true,\n                fill: newTriangle.fill(),\n                stroke: 'black',\n                strokeWidth: 2\n              };\n              fetch('http://localhost:8080/', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(updatedTriangleData)\n              });\n            });\n          }\n          point1 = null;\n          point2 = null;\n          point3 = null;\n        }\n      });\n      var colorSpans = document.querySelectorAll('.color-span');\n      colorSpans.forEach(span => {\n        span.addEventListener('click', () => {\n          selectedColorSpan = span;\n          this.changeColor(newTriangle, selectedColorSpan, layer);\n          if (newTriangle) {\n            const scaleX = newTriangle.scaleX();\n            const scaleY = newTriangle.scaleY();\n            const originalPoints = [newTriangle.points()[0], newTriangle.points()[1], newTriangle.points()[2], newTriangle.points()[3], newTriangle.points()[4], newTriangle.points()[5]];\n            const updatedPoints = originalPoints.map((point, index) => index % 2 === 0 ? point * scaleX : point * scaleY);\n            const updatedTriangleData = {\n              shape: 'triangle',\n              points: updatedPoints,\n              closed: true,\n              fill: newTriangle.fill(),\n              stroke: 'black',\n              strokeWidth: 2\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedTriangleData)\n            });\n          }\n        });\n      });\n      point1 = null;\n      point2 = null;\n      point3 = null;\n    },\n    drawRectangle: function () {\n      var Width = window.innerWidth;\n      var Height = window.innerHeight;\n      let rectangle = document.querySelector(\".rectangle\");\n      let width = document.querySelector(\"#width\");\n      let height = document.querySelector(\"#height\");\n      var stage = new Konva.Stage({\n        container: 'container',\n        width: Width,\n        height: Height\n      });\n      rectangle.style.left = \"-11%\";\n      width = parseFloat(width.value);\n      height = parseFloat(height.value);\n      stage.add(layer);\n      var selectedColorSpan = null;\n      newCircle = null;\n      newEllipse = null;\n      newTriangle = null;\n      newSquare = null;\n      stage.on('mousedown', function () {\n        var pos = stage.getPointerPosition();\n        newRectangle = new Konva.Rect({\n          x: pos.x,\n          y: pos.y,\n          width: width,\n          height: height,\n          fill: 'white',\n          stroke: 'black',\n          strokeWidth: 2\n        });\n        layer.add(newRectangle);\n        if (newRectangle) {\n          const RectangleData = {\n            shape: 'rectangle',\n            x: pos.x,\n            y: pos.y,\n            width: width,\n            height: height,\n            fill: 'white',\n            stroke: 'black',\n            strokeWidth: 2\n          };\n          fetch('http://localhost:8080/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(RectangleData)\n          });\n          newRectangle.on('transformend', () => {\n            const updatedWidth = newRectangle.width() * newRectangle.scaleX();\n            const updatedHeight = newRectangle.height() * newRectangle.scaleY();\n            const updatedRectangleData = {\n              shape: 'rectangle',\n              x: newRectangle.position().x,\n              y: newRectangle.position().y,\n              width: updatedWidth,\n              height: updatedHeight,\n              fill: newRectangle.fill(),\n              stroke: 'black',\n              strokeWidth: 2\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedRectangleData)\n            });\n          });\n        }\n      });\n      var colorSpans = document.querySelectorAll('.color-span');\n      colorSpans.forEach(span => {\n        span.addEventListener('click', () => {\n          selectedColorSpan = span;\n          this.changeColor(newRectangle, selectedColorSpan, layer);\n          if (newTriangle) {\n            const updatedWidth = newRectangle.width() * newRectangle.scaleX();\n            const updatedHeight = newRectangle.height() * newRectangle.scaleY();\n            const updatedRectangleData = {\n              shape: 'rectangle',\n              x: newRectangle.position().x,\n              y: newRectangle.position().y,\n              width: updatedWidth,\n              height: updatedHeight,\n              fill: newRectangle.fill(),\n              stroke: 'black',\n              strokeWidth: 2\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedRectangleData)\n            });\n          }\n        });\n      });\n    },\n    drawSquare: function () {\n      var Width = window.innerWidth;\n      var Height = window.innerHeight;\n      let square = document.querySelector(\".square\");\n      let length = document.querySelector(\"#length\");\n      var stage = new Konva.Stage({\n        container: 'container',\n        width: Width,\n        height: Height\n      });\n      square.style.left = \"-11%\";\n      length = parseFloat(length.value);\n      stage.add(layer);\n      var selectedColorSpan = null;\n      newCircle = null;\n      newEllipse = null;\n      newTriangle = null;\n      newRectangle = null;\n      stage.on('mousedown', function () {\n        var pos = stage.getPointerPosition();\n        newSquare = new Konva.Rect({\n          x: pos.x,\n          y: pos.y,\n          width: length,\n          height: length,\n          fill: 'white',\n          stroke: 'black',\n          strokeWidth: 2\n        });\n        layer.add(newSquare);\n        if (newSquare) {\n          const SquareData = {\n            shape: 'square',\n            x: pos.x,\n            y: pos.y,\n            width: length,\n            height: length,\n            fill: 'white',\n            stroke: 'black',\n            strokeWidth: 2\n          };\n          fetch('http://localhost:8080/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(SquareData)\n          });\n          newSquare.on('transformend', () => {\n            const updatedLength = newSquare.width() * newSquare.scaleX();\n            const updatedSquareData = {\n              shape: 'square',\n              x: newSquare.position().x,\n              y: newSquare.position().y,\n              width: updatedLength,\n              height: updatedLength,\n              fill: newSquare.fill(),\n              stroke: 'black',\n              strokeWidth: 2\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedSquareData)\n            });\n          });\n        }\n      });\n      var colorSpans = document.querySelectorAll('.color-span');\n      colorSpans.forEach(span => {\n        span.addEventListener('click', () => {\n          selectedColorSpan = span;\n          this.changeColor(newSquare, selectedColorSpan, layer);\n          if (newSquare) {\n            const updatedLength = newSquare.width() * newSquare.scaleX();\n            const updatedSquareData = {\n              shape: 'square',\n              x: newSquare.position().x,\n              y: newSquare.position().y,\n              width: updatedLength,\n              height: updatedLength,\n              fill: newSquare.fill(),\n              stroke: 'black',\n              strokeWidth: 2\n            };\n            fetch('http://localhost:8080/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(updatedSquareData)\n            });\n          }\n        });\n      });\n    },\n    showHideShapeBar: function () {\n      // let loadXML      = document.querySelector('.loadXML')      ;\n      let loadJSON = document.querySelector('.loadFile');\n      let saveXML = document.querySelector('.saveXML');\n      let saveJSON = document.querySelector('.saveJSON');\n      let colorPalette = document.querySelector('.colorPalette');\n      let shapeBar = document.querySelector('.shapeBar');\n      let line = document.querySelector(\".line\");\n      let circle = document.querySelector(\".circle\");\n      let ellipse = document.querySelector(\".ellipse\");\n      let triangle = document.querySelector(\".triangle\");\n      let rectangle = document.querySelector(\".rectangle\");\n      let square = document.querySelector(\".square\");\n      if (colorPalette.style.opacity === \"1\") {\n        colorPalette.style.opacity = \"0\";\n        if (loadXML.style.left === \"5%\" || saveXML.style.left === \"5%\") {\n          // loadXML.style.left  = \"-35%\" ;\n          loadJSON.style.left = \"-35%\";\n          saveXML.style.left = \"-35%\";\n          saveJSON.style.left = \"-35%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"5%\";\n          }, 600);\n        } else {\n          setTimeout(() => {\n            shapeBar.style.left = \"5%\";\n          }, 500);\n        }\n      } else if (loadXML.style.left === \"5%\" || saveXML.style.left === \"5%\") {\n        loadXML.style.left = \"-35%\";\n        loadJSON.style.left = \"-35%\";\n        saveXML.style.left = \"-35%\";\n        saveJSON.style.left = \"-35%\";\n        setTimeout(() => {\n          shapeBar.style.left = \"5%\";\n        }, 200);\n      } else if (line.style.left === \"12%\") {\n        line.style.left = \"-11%\";\n        setTimeout(() => {\n          shapeBar.style.left = \"-2%\";\n        }, 200);\n      } else if (circle.style.left === \"12%\") {\n        circle.style.left = \"-11%\";\n        setTimeout(() => {\n          shapeBar.style.left = \"-2%\";\n        }, 200);\n      } else if (ellipse.style.left === \"12%\") {\n        ellipse.style.left = \"-11%\";\n        setTimeout(() => {\n          shapeBar.style.left = \"-2%\";\n        }, 200);\n      } else if (triangle.style.left === \"12%\") {\n        triangle.style.left = \"-11%\";\n        setTimeout(() => {\n          shapeBar.style.left = \"-2%\";\n        }, 200);\n      } else if (rectangle.style.left === \"12%\") {\n        rectangle.style.left = \"-11%\";\n        setTimeout(() => {\n          shapeBar.style.left = \"-2%\";\n        }, 200);\n      } else if (square.style.left === \"12%\") {\n        square.style.left = \"-11%\";\n        setTimeout(() => {\n          shapeBar.style.left = \"-2%\";\n        }, 200);\n      } else {\n        if (shapeBar.style.left === \"5%\") shapeBar.style.left = \"-2%\";else shapeBar.style.left = \"5%\";\n      }\n    },\n    showHideColorPalette: function () {\n      let colorPalette = document.querySelector('.colorPalette');\n      let shapeBar = document.querySelector('.shapeBar');\n      let line = document.querySelector(\".line\");\n      let circle = document.querySelector(\".circle\");\n      let ellipse = document.querySelector(\".ellipse\");\n      let triangle = document.querySelector(\".triangle\");\n      let rectangle = document.querySelector(\".rectangle\");\n      let square = document.querySelector(\".square\");\n      if (shapeBar.style.left === \"5%\") {\n        if (line.style.left === \"12%\") {\n          line.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            colorPalette.style.opacity = \"1\";\n          }, 400);\n        } else if (circle.style.left === \"12%\") {\n          circle.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            colorPalette.style.opacity = \"1\";\n          }, 400);\n        } else if (ellipse.style.left === \"12%\") {\n          ellipse.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            colorPalette.style.opacity = \"1\";\n          }, 400);\n        } else if (triangle.style.left === \"12%\") {\n          triangle.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            colorPalette.style.opacity = \"1\";\n          }, 400);\n        } else if (rectangle.style.left === \"12%\") {\n          rectangle.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            colorPalette.style.opacity = \"1\";\n          }, 400);\n        } else if (square.style.left === \"12%\") {\n          square.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            colorPalette.style.opacity = \"1\";\n          }, 400);\n        } else {\n          shapeBar.style.left = \"-2%\";\n          setTimeout(() => {\n            colorPalette.style.opacity = \"1\";\n          }, 200);\n        }\n      } else {\n        if (colorPalette.style.opacity === \"1\") colorPalette.style.opacity = \"0\";else colorPalette.style.opacity = \"1\";\n      }\n    },\n    showHideLineOption: function () {\n      let line = document.querySelector(\".line\");\n      let circle = document.querySelector(\".circle\");\n      let ellipse = document.querySelector(\".ellipse\");\n      let triangle = document.querySelector(\".triangle\");\n      let rectangle = document.querySelector(\".rectangle\");\n      let square = document.querySelector(\".square\");\n      if (circle.style.left === \"12%\") {\n        circle.style.left = \"-11%\";\n        setTimeout(() => {\n          line.style.left = \"12%\";\n        }, 200);\n      } else if (ellipse.style.left === \"12%\") {\n        ellipse.style.left = \"-11%\";\n        setTimeout(() => {\n          line.style.left = \"12%\";\n        }, 200);\n      } else if (triangle.style.left === \"12%\") {\n        triangle.style.left = \"-11%\";\n        setTimeout(() => {\n          line.style.left = \"12%\";\n        }, 200);\n      } else if (rectangle.style.left === \"12%\") {\n        rectangle.style.left = \"-11%\";\n        setTimeout(() => {\n          line.style.left = \"12%\";\n        }, 200);\n      } else if (square.style.left === \"12%\") {\n        square.style.left = \"-11%\";\n        setTimeout(() => {\n          line.style.left = \"12%\";\n        }, 200);\n      } else {\n        if (line.style.left === \"12%\") line.style.left = \"-11%\";else line.style.left = \"12%\";\n      }\n    },\n    showHideCircleOption: function () {\n      let line = document.querySelector(\".line\");\n      let circle = document.querySelector(\".circle\");\n      let ellipse = document.querySelector(\".ellipse\");\n      let triangle = document.querySelector(\".triangle\");\n      let rectangle = document.querySelector(\".rectangle\");\n      let square = document.querySelector(\".square\");\n      if (line.style.left === \"12%\") {\n        line.style.left = \"-11%\";\n        setTimeout(() => {\n          circle.style.left = \"12%\";\n        }, 200);\n      } else if (ellipse.style.left === \"12%\") {\n        ellipse.style.left = \"-11%\";\n        setTimeout(() => {\n          circle.style.left = \"12%\";\n        }, 200);\n      } else if (triangle.style.left === \"12%\") {\n        triangle.style.left = \"-11%\";\n        setTimeout(() => {\n          circle.style.left = \"12%\";\n        }, 200);\n      } else if (rectangle.style.left === \"12%\") {\n        rectangle.style.left = \"-11%\";\n        setTimeout(() => {\n          circle.style.left = \"12%\";\n        }, 200);\n      } else if (square.style.left === \"12%\") {\n        square.style.left = \"-11%\";\n        setTimeout(() => {\n          circle.style.left = \"12%\";\n        }, 200);\n      } else {\n        if (circle.style.left === \"12%\") circle.style.left = \"-11%\";else circle.style.left = \"12%\";\n      }\n    },\n    showHideEllipseOption: function () {\n      let line = document.querySelector(\".line\");\n      let circle = document.querySelector(\".circle\");\n      let ellipse = document.querySelector(\".ellipse\");\n      let triangle = document.querySelector(\".triangle\");\n      let rectangle = document.querySelector(\".rectangle\");\n      let square = document.querySelector(\".square\");\n      if (line.style.left === \"12%\") {\n        line.style.left = \"-11%\";\n        setTimeout(() => {\n          ellipse.style.left = \"12%\";\n        }, 200);\n      } else if (circle.style.left === \"12%\") {\n        circle.style.left = \"-11%\";\n        setTimeout(() => {\n          ellipse.style.left = \"12%\";\n        }, 200);\n      } else if (triangle.style.left === \"12%\") {\n        triangle.style.left = \"-11%\";\n        setTimeout(() => {\n          ellipse.style.left = \"12%\";\n        }, 200);\n      } else if (rectangle.style.left === \"12%\") {\n        rectangle.style.left = \"-11%\";\n        setTimeout(() => {\n          ellipse.style.left = \"12%\";\n        }, 200);\n      } else if (square.style.left === \"12%\") {\n        square.style.left = \"-11%\";\n        setTimeout(() => {\n          ellipse.style.left = \"12%\";\n        }, 200);\n      } else {\n        if (ellipse.style.left === \"12%\") ellipse.style.left = \"-11%\";else ellipse.style.left = \"12%\";\n      }\n    },\n    showHideTriangleOption: function () {\n      let line = document.querySelector(\".line\");\n      let circle = document.querySelector(\".circle\");\n      let ellipse = document.querySelector(\".ellipse\");\n      let triangle = document.querySelector(\".triangle\");\n      let rectangle = document.querySelector(\".rectangle\");\n      let square = document.querySelector(\".square\");\n      if (line.style.left === \"12%\") {\n        line.style.left = \"-11%\";\n        setTimeout(() => {\n          triangle.style.left = \"12%\";\n        }, 200);\n      } else if (circle.style.left === \"12%\") {\n        circle.style.left = \"-11%\";\n        setTimeout(() => {\n          triangle.style.left = \"12%\";\n        }, 200);\n      } else if (ellipse.style.left === \"12%\") {\n        ellipse.style.left = \"-11%\";\n        setTimeout(() => {\n          triangle.style.left = \"12%\";\n        }, 200);\n      } else if (rectangle.style.left === \"12%\") {\n        rectangle.style.left = \"-11%\";\n        setTimeout(() => {\n          triangle.style.left = \"12%\";\n        }, 200);\n      } else if (square.style.left === \"12%\") {\n        square.style.left = \"-11%\";\n        setTimeout(() => {\n          triangle.style.left = \"12%\";\n        }, 200);\n      } else {\n        if (triangle.style.left === \"12%\") triangle.style.left = \"-11%\";else triangle.style.left = \"12%\";\n      }\n    },\n    showHideSave: function () {\n      let saveXML = document.querySelector('.saveXML');\n      let saveJSON = document.querySelector('.saveJSON');\n      let shapeBar = document.querySelector('.shapeBar');\n      let line = document.querySelector(\".line\");\n      let circle = document.querySelector(\".circle\");\n      let ellipse = document.querySelector(\".ellipse\");\n      let triangle = document.querySelector(\".triangle\");\n      let rectangle = document.querySelector(\".rectangle\");\n      let square = document.querySelector(\".square\");\n      if (shapeBar.style.left === \"5%\") {\n        if (line.style.left === \"12%\") {\n          line.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            saveXML.style.left = \"5%\";\n            saveJSON.style.left = \"5%\";\n          }, 700);\n        } else if (circle.style.left === \"12%\") {\n          circle.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            saveXML.style.left = \"5%\";\n            saveJSON.style.left = \"5%\";\n          }, 700);\n        } else if (ellipse.style.left === \"12%\") {\n          ellipse.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            saveXML.style.left = \"5%\";\n            saveJSON.style.left = \"5%\";\n          }, 700);\n        } else if (triangle.style.left === \"12%\") {\n          triangle.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            saveXML.style.left = \"5%\";\n            saveJSON.style.left = \"5%\";\n          }, 700);\n        } else if (rectangle.style.left === \"12%\") {\n          rectangle.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            saveXML.style.left = \"5%\";\n            saveJSON.style.left = \"5%\";\n          }, 700);\n        } else if (square.style.left === \"12%\") {\n          square.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            saveXML.style.left = \"5%\";\n            saveJSON.style.left = \"5%\";\n          }, 700);\n        } else {\n          shapeBar.style.left = \"-2%\";\n          setTimeout(() => {\n            saveXML.style.left = \"5%\";\n            saveJSON.style.left = \"5%\";\n          }, 200);\n        }\n      } else {\n        if (saveXML.style.left === \"5%\") {\n          saveXML.style.left = \"-35%\";\n          saveJSON.style.left = \"-35%\";\n        } else {\n          saveXML.style.left = \"5%\";\n          saveJSON.style.left = \"5%\";\n        }\n      }\n    },\n    showHideLoad: function () {\n      let loadXML = document.querySelector('.loadXML');\n      let loadJSON = document.querySelector('.loadJSON');\n      let shapeBar = document.querySelector('.shapeBar');\n      let line = document.querySelector(\".line\");\n      let circle = document.querySelector(\".circle\");\n      let ellipse = document.querySelector(\".ellipse\");\n      let triangle = document.querySelector(\".triangle\");\n      let rectangle = document.querySelector(\".rectangle\");\n      let square = document.querySelector(\".square\");\n      if (shapeBar.style.left === \"5%\") {\n        if (line.style.left === \"12%\") {\n          line.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            loadXML.style.left = \"5%\";\n            loadJSON.style.left = \"5%\";\n          }, 700);\n        } else if (circle.style.left === \"12%\") {\n          circle.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            loadXML.style.left = \"5%\";\n            loadJSON.style.left = \"5%\";\n          }, 700);\n        } else if (ellipse.style.left === \"12%\") {\n          ellipse.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            loadXML.style.left = \"5%\";\n            loadJSON.style.left = \"5%\";\n          }, 700);\n        } else if (triangle.style.left === \"12%\") {\n          triangle.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            loadXML.style.left = \"5%\";\n            loadJSON.style.left = \"5%\";\n          }, 700);\n        } else if (rectangle.style.left === \"12%\") {\n          rectangle.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            loadXML.style.left = \"5%\";\n            loadJSON.style.left = \"5%\";\n          }, 700);\n        } else if (square.style.left === \"12%\") {\n          square.style.left = \"-11%\";\n          setTimeout(() => {\n            shapeBar.style.left = \"-2%\";\n          }, 200);\n          setTimeout(() => {\n            loadXML.style.left = \"5%\";\n            loadJSON.style.left = \"5%\";\n          }, 700);\n        } else {\n          shapeBar.style.left = \"-2%\";\n          setTimeout(() => {\n            loadXML.style.left = \"5%\";\n            loadJSON.style.left = \"5%\";\n          }, 200);\n        }\n      } else {\n        if (loadXML.style.left === \"5%\") {\n          loadXML.style.left = \"-35%\";\n          loadJSON.style.left = \"-35%\";\n        } else {\n          loadXML.style.left = \"5%\";\n          loadJSON.style.left = \"5%\";\n        }\n      }\n    },\n    showHideRectangleOption: function () {\n      let line = document.querySelector(\".line\");\n      let circle = document.querySelector(\".circle\");\n      let ellipse = document.querySelector(\".ellipse\");\n      let triangle = document.querySelector(\".triangle\");\n      let rectangle = document.querySelector(\".rectangle\");\n      let square = document.querySelector(\".square\");\n      if (line.style.left === \"12%\") {\n        line.style.left = \"-11%\";\n        setTimeout(() => {\n          rectangle.style.left = \"12%\";\n        }, 200);\n      } else if (circle.style.left === \"12%\") {\n        circle.style.left = \"-11%\";\n        setTimeout(() => {\n          rectangle.style.left = \"12%\";\n        }, 200);\n      } else if (ellipse.style.left === \"12%\") {\n        ellipse.style.left = \"-11%\";\n        setTimeout(() => {\n          rectangle.style.left = \"12%\";\n        }, 200);\n      } else if (triangle.style.left === \"12%\") {\n        triangle.style.left = \"-11%\";\n        setTimeout(() => {\n          rectangle.style.left = \"12%\";\n        }, 200);\n      } else if (square.style.left === \"12%\") {\n        square.style.left = \"-11%\";\n        setTimeout(() => {\n          rectangle.style.left = \"12%\";\n        }, 200);\n      } else {\n        if (rectangle.style.left === \"12%\") rectangle.style.left = \"-11%\";else rectangle.style.left = \"12%\";\n      }\n    },\n    showHideSquareOption: function () {\n      let line = document.querySelector(\".line\");\n      let circle = document.querySelector(\".circle\");\n      let ellipse = document.querySelector(\".ellipse\");\n      let triangle = document.querySelector(\".triangle\");\n      let rectangle = document.querySelector(\".rectangle\");\n      let square = document.querySelector(\".square\");\n      if (line.style.left === \"12%\") {\n        line.style.left = \"-11%\";\n        setTimeout(() => {\n          square.style.left = \"12%\";\n        }, 200);\n      } else if (circle.style.left === \"12%\") {\n        circle.style.left = \"-11%\";\n        setTimeout(() => {\n          square.style.left = \"12%\";\n        }, 200);\n      } else if (ellipse.style.left === \"12%\") {\n        ellipse.style.left = \"-11%\";\n        setTimeout(() => {\n          square.style.left = \"12%\";\n        }, 200);\n      } else if (triangle.style.left === \"12%\") {\n        triangle.style.left = \"-11%\";\n        setTimeout(() => {\n          square.style.left = \"12%\";\n        }, 200);\n      } else if (rectangle.style.left === \"12%\") {\n        rectangle.style.left = \"-11%\";\n        setTimeout(() => {\n          square.style.left = \"12%\";\n        }, 200);\n      } else {\n        if (square.style.left === \"12%\") square.style.left = \"-11%\";else square.style.left = \"12%\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["Konva","layer","Layer","newLine","newCircle","newEllipse","newTriangle","newRectangle","newSquare","stage","transformer","getColorFromSpan","clickedSpan","color","window","getComputedStyle","backgroundColor","name","data","file","methods","undo","temp","fetch","desiredState","json","i","len","currentShape","Rect","x","y","width","height","fill","stroke","strokeWidth","id","add","Circle","radius","Ellipse","radiusX","radiusY","Line","points","closed","draw","saveData","e","preventDefault","userInfo","document","querySelector","formData","FormData","object","forEach","value","key","loc","substring","length","includes","JSON","stringify","get","method","headers","body","loadData","result","console","log","move","Stage","container","innerWidth","innerHeight","on","clickedShape","target","Shape","draggable","deleteShape","remove","copySelectedShape","newShape","clone","slice","pointerPos","getPointerPosition","resize","Transformer","enabledAnchors","rotateEnabled","selectShape","shape","attachTo","shapeType","getClassName","nodes","deselectShape","detach","changeColor","selectedColorSpan","drawLine","line","style","left","point1","point2","lineData","drawCircle","circle","parseFloat","pos","CircleData","updatedRadius","scaleX","updatedCircleData","position","colorSpans","querySelectorAll","span","addEventListener","drawEllipse","ellipse","EllipseData","updatedRadiusX","updatedRadiusY","scaleY","updatedEllipseData","drawTriangle","triangle","point3","TriangleData","originalPoints","updatedPoints","map","point","index","updatedTriangleData","drawRectangle","Width","Height","rectangle","RectangleData","updatedWidth","updatedHeight","updatedRectangleData","drawSquare","square","SquareData","updatedLength","updatedSquareData","showHideShapeBar","loadJSON","saveXML","saveJSON","colorPalette","shapeBar","opacity","loadXML","setTimeout","showHideColorPalette","showHideLineOption","showHideCircleOption","showHideEllipseOption","showHideTriangleOption","showHideSave","showHideLoad","showHideRectangleOption","showHideSquareOption"],"sources":["C:\\Users\\Al-Gawad\\IdeaProjects\\Year 2\\OOP\\paint\\front_code\\src\\components\\SideBar.vue"],"sourcesContent":["<template>\r\n    <div id = \"container\"></div> \r\n    <div class = \"colorPalette\">\r\n        <span class = \"black color-span\"             ></span>\r\n        <span class = \"gray color-span\"              ></span>\r\n        <span class = \"intermediateGray color-span\"  ></span>\r\n        <span class = \"lightGray color-span\"         ></span>\r\n        <span class = \"veryLightGray color-span\"     ></span>\r\n        <span class = \"white color-span\"             ></span>\r\n        <span class = \"red color-span\"               ></span>\r\n        <span class = \"lightRed color-span\"          ></span>\r\n        <span class = \"pink color-span\"              ></span>\r\n        <span class = \"lightPurple color-span\"       ></span>\r\n        <span class = \"intermediatePurple color-span\"></span>\r\n        <span class = \"purple color-span\"            ></span>\r\n        <span class = \"sky color-span\"               ></span>\r\n        <span class = \"intermediateSky color-span\"   ></span>\r\n        <span class = \"lightSky color-span\"          ></span>\r\n        <span class = \"lightBlue color-span\"         ></span>\r\n        <span class = \"intermediateBlue color-span\"  ></span>\r\n        <span class = \"blue color-span\"              ></span>\r\n        <span class = \"green color-span\"             ></span>\r\n        <span class = \"intermediateGreen color-span\" ></span>\r\n        <span class = \"lightGreen color-span\"        ></span>\r\n        <span class = \"yellow color-span\"            ></span>\r\n        <span class = \"lightOrange color-span\"       ></span>\r\n        <span class = \"orange color-span\"            ></span>\r\n    </div>\r\n    \r\n    <div class = \"options\">\r\n        <div class = \"line\">\r\n            <p>Specifiy the start point and the end point of the line</p>\r\n            <button class = \"btn btn-outline-primary\" @click = \"drawLine\">OK</button>\r\n        </div>\r\n        <div class = \"circle\">\r\n            <label>radius</label> <input type = \"text\" id = \"radius\">\r\n            <button class = \"btn btn-outline-primary\" @click = \"drawCircle\">OK</button>\r\n        </div>\r\n        <div class = \"ellipse\">\r\n            <label>radius (x)</label> <input type = \"text\" id = \"radiusX\"> <br>\r\n            <label>radius (y)</label> <input type = \"text\" id = \"radiusY\">\r\n            <button class = \"btn btn-outline-primary\" @click = \"drawEllipse\">OK</button>\r\n        </div>\r\n        <div class = \"triangle\">\r\n            <p>Specifiy the three vertices of the triangle</p>\r\n            <button class = \"btn btn-outline-primary\" @click = \"drawTriangle\">OK</button>\r\n        </div>\r\n        <div class = \"rectangle\">\r\n            <label>width </label> <input type = \"text\" id = \"width\"> <br>\r\n            <label>height</label> <input type = \"text\" id = \"height\">\r\n            <button class = \"btn btn-outline-primary\" @click = \"drawRectangle\">OK</button>\r\n        </div>\r\n        <div class = \"square\">\r\n            <label>length</label> <input type=\"text\" id = \"length\">\r\n            <button class = \"btn btn-outline-primary\" @click = \"drawSquare\">OK</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class = \"shapeBar\">\r\n        <div @click = \"showHideLineOption\"      ><img width = \"60\" height = \"60\" src = \"https://img.icons8.com/ios/50/ffffff/line--v1.png\"                     /></div>\r\n        <div @click = \"showHideCircleOption\"    ><img width = \"60\" height = \"60\" src = \"https://img.icons8.com/ios/50/ffffff/circled.png\"                      /></div>\r\n        <div @click = \"showHideEllipseOption\"   ><img width = \"60\" height = \"60\" src = \"https://img.icons8.com/ios/50/ffffff/ellipse-stroked--v1.png\"          /></div>\r\n        <div @click = \"showHideTriangleOption\"  ><img width = \"60\" height = \"60\" src = \"https://img.icons8.com/ios/50/ffffff/trine-120.png\"                    /></div>\r\n        <div @click = \"showHideRectangleOption\" ><img width = \"60\" height = \"60\" src = \"https://img.icons8.com/fluency-systems-regular/48/ffffff/rectangle.png\"/></div>\r\n        <div @click = \"showHideSquareOption\"    ><img width = \"60\" height = \"60\" src = \"https://img.icons8.com/ios/50/ffffff/square-90.png\"                    /></div>\r\n    </div>\r\n\r\n        <div class = \"save\">\r\n            <div class = \"saveXML\" style=\"display: none;\">\r\n            </div>\r\n            <div class = \"saveJSON\">\r\n                <form class=\"saveForm\">\r\n                    <label>Enter Location</label>\r\n                    <input type=\"text\" name=\"saveLoc\" required/>\r\n                    <label><input type=\"radio\" name=\"JSON\">JSON&nbsp;</label>\r\n                    <label><input type=\"radio\" name=\"XML\">XML&nbsp;</label>\r\n                    <label><input type=\"radio\" name=\"BOTH\">BOTH </label><br>\r\n                    <button type=\"submit\" @click=\"saveData\">Save</button>\r\n                </form>\r\n                <!-- <button @click=\"$refs.file.click()\">open file dialog</button> -->\r\n            </div>\r\n        </div>\r\n\r\n        <div class = \"load\">\r\n            <div class = \"loadXML\">\r\n            </div>\r\n            <div class = \"loadJSON\">\r\n                <label>File to load&nbsp;&nbsp;</label>\r\n                <!-- <input type=\"file\" ref=\"file\" accept=\"application/json, application/xml\" @change=\"loadFileFn\"/> -->\r\n                <input type=\"text\" v-model=\"file\">\r\n                <button @click=\"loadData\">Load</button>\r\n            </div>\r\n        </div>\r\n    \r\n    <div class = \"sideBar\">\r\n        <div @click = \"showHideShapeBar\"    ><img width = \"40\" height = \"40\" src = \"https://img.icons8.com/external-becris-lineal-becris/64/ffffff/external-shapes-coding-programming-becris-lineal-becris.png\"/></div>\r\n        <div @click = \"showHideColorPalette\"><img width = \"40\" height = \"40\" src = \"https://img.icons8.com/ios/50/ffffff/paint.png\"                        /></div>\r\n        <div @click = \"resize\"              ><img width = \"40\" height = \"40\" src = \"https://img.icons8.com/ios/50/ffffff/resize-diagonal--v1.png\"          /></div>\r\n        <div @click = \"move\"                ><img width = \"40\" height = \"40\"  src = \"https://img.icons8.com/ios/50/ffffff/move.png\"                        /></div>\r\n        <div @click = \"copySelectedShape\"   ><img width = \"40\" height = \"40\"  src = \"https://img.icons8.com/fluency-systems-regular/48/ffffff/copy--v1.png\"/></div>\r\n        <div @click = \"deleteShape\"         ><img width = \"40\" height = \"40\"  src = \"https://img.icons8.com/carbon-copy/100/ffffff/filled-trash.png\"       /></div>\r\n        <div @click = \"undo\"         ><img width = \"40\" height = \"40\"  src = \"https://img.icons8.com/ios/50/ffffff/undo.png\"                                                        /></div>\r\n        <div @click = \"redo\"         ><img width = \"40\" height = \"40\"  src = \"https://img.icons8.com/ios/50/ffffff/redo--v1.png\"                                                    /></div>\r\n        <div @click = \"showHideSave\"        ><img width = \"40\" height = \"40\"  src = \"https://img.icons8.com/ios/50/ffffff/save--v1.png\"                    /></div>\r\n        <div @click = \"showHideLoad\"        ><img width = \"40\" height = \"40\"  src = \"https://img.icons8.com/pastel-glyph/64/ffffff/upload--v1.png\"         /></div>\r\n    </div>\r\n</template> \r\n<script> \r\n\r\n    import Konva from 'konva' ;\r\n    \r\n    var layer            = new Konva.Layer() ;\r\n    var newLine          = null ;\r\n    var newCircle        = null ;\r\n    var newEllipse       = null ;\r\n    var newTriangle      = null ;\r\n    var newRectangle     = null ;\r\n    var newSquare        = null ;\r\n    let stage, transformer      ; \r\n\r\n    function getColorFromSpan(clickedSpan) {\r\n        var color = window.getComputedStyle(clickedSpan).backgroundColor ;\r\n        return color ;\r\n    }\r\n\r\n    export default {\r\n        name    : 'SideBar',\r\n\r\n        data() {\r\n            return {\r\n                file: \"\"\r\n            }\r\n        },\r\n            \r\n        methods : {\r\n            \r\n            undo : async function (){\r\n                // stage = new Konva.Stage({\r\n                //     container : 'container',\r\n                //     width     : window.innerWidth,\r\n                //     height    : window.innerHeight,\r\n                // }) ;\r\n\r\n                // stage.add(layer) ;\r\n                \r\n                //get history from backend\r\n                const temp = await fetch(\"http://localhost:8080/function/undo\");\r\n                //get array of objects of r=the desired state\r\n                const desiredState = await temp.json();\r\n                \r\n                for(let i=0;i<len(desiredState);i++){\r\n\r\n                    let currentShape = desiredState[i];\r\n\r\n                    if ( currentShape[\"shape\"] === \"rectangle\" ){\r\n                        newRectangle   = new Konva.Rect({\r\n                            x            : currentShape[\"x\"],\r\n                            y            : currentShape[\"y\"],\r\n                            width        : currentShape[\"width\"],\r\n                            height       : currentShape[\"height\"],\r\n                            fill         : currentShape[\"fill\"],\r\n                            stroke       : currentShape[\"stroke\"],\r\n                            strokeWidth  : 2,\r\n                            id           : currentShape[\"id\"]\r\n                        }) ;\r\n                        layer.add(newRectangle ) ;\r\n                    } \r\n                    else if (  currentShape[\"shape\"] === \"circle\" ){\r\n                        newCircle = new Konva.Circle({\r\n                            x           : currentShape[\"x\"],\r\n                            y           : currentShape[\"y\"],\r\n                            radius      : currentShape[\"radius\"],\r\n                            fill        : currentShape[\"fill\"],\r\n                            stroke      : currentShape[\"stroke\"],\r\n                            strokeWidth : 2,\r\n                            id           : currentShape[\"id\"]\r\n                        }) ;\r\n                        layer.add(newCircle) ;\r\n                    } \r\n                    else if (  currentShape[\"shape\"] === \"ellipse\" ){\r\n                        newEllipse   = new Konva.Ellipse({\r\n                            x           : currentShape[\"x\"],\r\n                            y           : currentShape[\"y\"],\r\n                            radiusX      : currentShape[\"radiusX\"],\r\n                            radiusY      : currentShape[\"radiusY\"],\r\n                            fill        : currentShape[\"fill\"],\r\n                            stroke      : currentShape[\"stroke\"],\r\n                            strokeWidth : 2,\r\n                            id           : currentShape[\"id\"]\r\n                        }) ;\r\n                        layer.add(newEllipse) ;\r\n                    } \r\n                    else if (  currentShape[\"shape\"] === \"line\" ){\r\n                        newLine = new Konva.Line({\r\n                            points      : currentShape[\"points\"],\r\n                            closed      : currentShape[\"closed\"],\r\n                            stroke      : currentShape[\"stroke\"],\r\n                            strokeWidth : currentShape[\"strokeWidth\"],\r\n                            id          : currentShape[\"id\"]\r\n                        }); \r\n                        layer.add(newLine) ;\r\n                    }\t\r\n                    else if (  currentShape[\"shape\"] === \"triangle\" ){\r\n                        newLine = new Konva.Line({\r\n                            points      : currentShape[\"points\"],\r\n                            closed      : currentShape[\"closed\"],\r\n                            fill        : currentShape[\"fill\"],\r\n                            stroke      : currentShape[\"stroke\"],\r\n                            strokeWidth : currentShape[\"strokeWidth\"],\r\n                            id          : currentShape[\"id\"]\r\n                        }); \r\n                        layer.add(newLine) ;\r\n                    }\t\r\n                    else if (  currentShape[\"shape\"] === \"square\" ){\r\n                        newLine = new Konva.Line({\r\n                            x            : currentShape[\"x\"],\r\n                            y            : currentShape[\"y\"],\r\n                            width        : currentShape[\"width\"],\r\n                            height       : currentShape[\"height\"],\r\n                            fill         : currentShape[\"fill\"],\r\n                            stroke       : currentShape[\"stroke\"],\r\n                            strokeWidth  : 2,\r\n                            id           : currentShape[\"id\"]\r\n                        }); \r\n                        layer.add(newLine) ;\r\n                    }\t\t\r\n                }\r\n                layer.draw() ;\r\n\r\n\r\n            },\r\n\r\n            async saveData(e){\r\n                \r\n                e.preventDefault();\r\n\r\n                const userInfo = document.querySelector(\".saveForm\");\r\n                let formData = new FormData(userInfo);\r\n\r\n\r\n                var object = {};\r\n                formData.forEach((value, key) => {\r\n\r\n                    if( key === \"JSON\" )\r\n                        object[\"format\"] = 1\r\n                    else if( key === \"XML\" )\r\n                        object[\"format\"] = 2\r\n                    else if( key === \"BOTH\" )\r\n                        object[\"format\"] = 3\r\n                    else{\r\n\r\n                        let loc = value.substring(1, value.length-1 )\r\n\r\n                        if( loc.includes(\"\\\\Users\") )\r\n                            \r\n                            object[key] = loc\r\n\r\n                    }\r\n\r\n                });\r\n\r\n                var json = JSON.stringify(object);\r\n                \r\n                if( formData.get(\"saveLoc\") ){\r\n                    await fetch( 'http://localhost:8080/function/save', {\r\n                        method: 'post',\r\n                        headers: {\r\n                            'Content-type': \"application/json; charset=UTF-8\"\r\n                        },\r\n                        body: json,\r\n                    });\r\n                }\r\n            \r\n            },\r\n\r\n            async loadData(){\r\n                \r\n                const result = await fetch('http://localhost:8080/function/load', {\r\n                    method: 'post',\r\n                    headers: {\r\n                        'Contect-type': 'application/json; charset=UTF-8'\r\n                    },\r\n                    body: this.file\r\n                });\r\n                \r\n                console.log( result )\r\n\r\n                // const paint = result.json();\r\n\r\n                // console.log(paint)\r\n\r\n                // this.shapes = paint['program']\r\n\r\n            },\r\n\r\n            move: function () {\r\n                var stage = new Konva.Stage({\r\n                    container: 'container',\r\n                    width: window.innerWidth,\r\n                    height: window.innerHeight,\r\n                });\r\n\r\n                stage.add(layer);\r\n\r\n                stage.on('click', function (e) {\r\n                    var clickedShape = e.target;\r\n\r\n                    if (!(clickedShape instanceof Konva.Shape)) {\r\n                        console.log('Clicked on an unknown shape');\r\n                        return;\r\n                    }\r\n\r\n                    clickedShape.draggable(!clickedShape.draggable());\r\n\r\n                    if (clickedShape instanceof Konva.Line) {\r\n                        clickedShape.on('click', () => {\r\n                            clickedShape.draggable(!clickedShape.draggable());\r\n                            layer.draw();\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n\r\n            deleteShape : function (){\r\n\r\n                stage = new Konva.Stage({\r\n                    container : 'container',\r\n                    width     : window.innerWidth,\r\n                    height    : window.innerHeight,\r\n                }) ;\r\n\r\n                stage.add(layer) ;\r\n\r\n                stage.on('click', function (e) {\r\n                    \r\n                    var clickedShape = e.target ;\r\n                    \r\n                    if (clickedShape instanceof Konva.Rect || clickedShape instanceof Konva.Circle || clickedShape instanceof Konva.Line || clickedShape instanceof Konva.Ellipse ) {\r\n                        clickedShape.remove() ;\r\n                        layer.draw() ;\r\n                    } \r\n                    else {\r\n                        console.log('Clicked on an unknown shape to be deleted') ;\r\n                    }\r\n                    \r\n                }) ;\r\n\r\n            },\r\n\r\n            copySelectedShape: function () {\r\n                var stage = new Konva.Stage({\r\n                    container : 'container',\r\n                    width     : window.innerWidth,\r\n                    height    : window.innerHeight,\r\n                }) ;\r\n\r\n                stage.add(layer) ;\r\n\r\n                var clickedShape = null ;\r\n                var newShape     = null ;\r\n\r\n                stage.on('click', function (e) {\r\n                    clickedShape = e.target ;\r\n\r\n                    if (!(clickedShape instanceof Konva.Shape)) {\r\n                        console.log('Clicked on an unknown shape to be copied');\r\n                        return ;\r\n                    }\r\n\r\n                    if (\r\n                        clickedShape instanceof Konva.Rect ||\r\n                        clickedShape instanceof Konva.Circle ||\r\n                        clickedShape instanceof Konva.Ellipse ||\r\n                        (clickedShape instanceof Konva.Line && clickedShape.points.length === 4)\r\n                    ) \r\n                    {\r\n                        newShape = clickedShape.clone({ x: clickedShape.x(), y: clickedShape.y() });\r\n                    } \r\n                    else if (clickedShape instanceof Konva.Line) {\r\n                        var points = clickedShape.points().slice() ;\r\n                        newShape   = new Konva.Line({\r\n                            points      : [points[0]+20, points[1]+50 ,points[2]+20, points[3]+50] ,\r\n                            closed      : true, \r\n                            stroke      : clickedShape.stroke(),\r\n                            strokeWidth : clickedShape.strokeWidth(),\r\n                        }) ;\r\n                        layer.add(newShape) ;\r\n                        layer.draw() ;\r\n                        return ;\r\n                    } \r\n                    else {\r\n                        console.log('Clicked on an unknown shape to be copied') ;\r\n                        return ;\r\n                    }\r\n\r\n                    var pointerPos = stage.getPointerPosition() ;\r\n                    newShape.x(pointerPos.x) ;\r\n                    newShape.y(pointerPos.y) ;\r\n                    layer.add(newShape) ;\r\n                    layer.draw() ;\r\n                }) ;\r\n            },\r\n\r\n\r\n            resize : function() {\r\n\r\n                stage = new Konva.Stage({\r\n                    container: 'container',\r\n                    width: window.innerWidth,\r\n                    height: window.innerHeight,\r\n                });\r\n\r\n                stage.add(layer);\r\n\r\n                transformer = new Konva.Transformer({\r\n                    enabledAnchors: ['top-right', 'top-left', 'bottom-right', 'bottom-left'],\r\n                    rotateEnabled: false\r\n                });\r\n                \r\n                layer.add(transformer);\r\n\r\n                stage.draw();\r\n\r\n                stage.on('click', (e) => this.selectShape(e.target)) ;\r\n\r\n            },\r\n\r\n            selectShape(shape) {\r\n                if (shape) {\r\n                    transformer.attachTo(shape);\r\n\r\n                    const shapeType = shape.getClassName() ;\r\n\r\n                    switch (shapeType) {\r\n                        case 'Rect'  :\r\n                        case 'Square':\r\n\r\n                            transformer.nodes([shape]) ;\r\n                            break ;\r\n\r\n                        case 'Circle'  :\r\n                        case 'Ellipse' :\r\n  \r\n                        transformer.nodes([shape]) ;\r\n                            break ;\r\n                        \r\n                        case 'Line':\r\n                            \r\n                            transformer.nodes([shape]) ;\r\n                            break ;\r\n                        case 'RegularPolygon':\r\n                            \r\n                            transformer.nodes([shape]) ;\r\n                            break ;\r\n\r\n                        default :\r\n                            break ;\r\n\r\n                    }\r\n\r\n                    layer.draw() ;\r\n                }\r\n            },\r\n\r\n            deselectShape() {\r\n            \r\n                transformer.detach() ;\r\n                layer.draw() ;\r\n            },\r\n                \r\n            changeColor(newShape, selectedColorSpan, layer) {\r\n                if (newShape && selectedColorSpan) {\r\n                    var color = getColorFromSpan(selectedColorSpan) ;\r\n                    newShape.fill(color) ;\r\n                    layer.draw() ;\r\n                }\r\n            },\r\n\r\n            drawLine: function () {\r\n\r\n                var width  = window.innerWidth  ;\r\n                var height = window.innerHeight ;\r\n\r\n                let line = document.querySelector(\".line\") ;\r\n\r\n                var stage = new Konva.Stage({\r\n                    container : 'container',\r\n                    width     : width,\r\n                    height    : height,\r\n                }) ;\r\n\r\n                line.style.left = \"-11%\" ;\r\n\r\n                stage.add(layer) ;\r\n\r\n                var point1, point2 ;\r\n\r\n                stage.on('mousedown', function () {\r\n\r\n                    if (!point1) {\r\n                        point1 = stage.getPointerPosition() ;\r\n                    } \r\n                    else {\r\n                        point2 = stage.getPointerPosition() ;\r\n\r\n                        newLine = new Konva.Line({\r\n                            points      : [point1.x, point1.y, point2.x, point2.y],\r\n                            stroke      : 'black',\r\n                            strokeWidth : 5,\r\n                        });\r\n\r\n                        layer.add(newLine) ;\r\n                        \r\n                        if (newLine){\r\n\r\n                            const lineData = {\r\n                                shape       : \"line\",\r\n                                points      : [point1.x, point1.y, point2.x, point2.y],\r\n                                stroke      : 'black',\r\n                                strokeWidth : 5, \r\n                            } ;\r\n                            \r\n                            fetch('http://localhost:8080/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(lineData),\r\n                            })\r\n                        }\r\n\r\n                        point1 = null ;\r\n                        point2 = null ;\r\n                    \r\n                    }\r\n\r\n                }) ;\r\n        \r\n            },\r\n\r\n            drawCircle() {\r\n                \r\n                var width  = window.innerWidth;\r\n                var height = window.innerHeight;\r\n\r\n                let circle = document.querySelector(\".circle\") ;\r\n                let radius = document.querySelector(\"#radius\") ;\r\n\r\n                var stage = new Konva.Stage({\r\n                    container : 'container',\r\n                    width     : width,\r\n                    height    : height,\r\n                }) ;\r\n\r\n                circle.style.left = \"-11%\" ;\r\n\r\n                radius = parseFloat(radius.value);\r\n\r\n                stage.add(layer) ;\r\n\r\n                var selectedColorSpan = null ;\r\n\r\n                newEllipse   = null ;\r\n                newTriangle  = null ;\r\n                newRectangle = null ;\r\n                newSquare    = null ;\r\n\r\n                stage.on('mousedown', () => {\r\n                    var pos = stage.getPointerPosition();\r\n                    newCircle = new Konva.Circle({\r\n                        x           : pos.x,\r\n                        y           : pos.y,\r\n                        radius      : radius,\r\n                        fill        : 'white',\r\n                        stroke      : 'black',\r\n                        strokeWidth : 2,\r\n                    }) ;\r\n\r\n                    layer.add(newCircle) ;\r\n\r\n                    if (newCircle){\r\n                        \r\n                        const CircleData = {\r\n                            shape       : 'circle',\r\n                            x           : pos.x,\r\n                            y           : pos.y,\r\n                            radius      : radius,\r\n                            fill        : 'white',\r\n                            stroke      : 'black',\r\n                            strokeWidth : 2,\r\n                        } ;\r\n                            \r\n                        fetch('http://localhost:8080/', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            },\r\n                            body: JSON.stringify(CircleData),\r\n                        })\r\n                        \r\n                        newCircle.on('transformend', () => {\r\n                            \r\n                            const updatedRadius = newCircle.radius() * newCircle.scaleX() ;\r\n\r\n                            const updatedCircleData = {\r\n                                shape       : 'circle',\r\n                                x           : newCircle.position().x,\r\n                                y           : newCircle.position().y,\r\n                                radius      : updatedRadius,\r\n                                fill        : newCircle.fill(),\r\n                                stroke      : 'black',\r\n                                strokeWidth : 2,\r\n                            } ;\r\n\r\n                            fetch('http://localhost:8080/', {\r\n                                method  : 'POST',\r\n                                headers : {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(updatedCircleData),\r\n                            }) ;\r\n                        \r\n                        }) ;    \r\n                    }\r\n    \r\n                }) ;\r\n\r\n                var colorSpans = document.querySelectorAll('.color-span') ;\r\n\r\n                colorSpans.forEach((span) => {\r\n                    span.addEventListener('click', () => {\r\n                        selectedColorSpan = span ;\r\n                        this.changeColor(newCircle, selectedColorSpan, layer) ;\r\n                        \r\n                        if (newCircle){\r\n\r\n                            const updatedRadius = newCircle.radius() * newCircle.scaleX() ;\r\n\r\n                            const updatedCircleData = {\r\n                                shape       : 'circle',\r\n                                x           : newCircle.position().x,\r\n                                y           : newCircle.position().y,\r\n                                radius      : updatedRadius,\r\n                                fill        : newCircle.fill(),\r\n                                stroke      : 'black',\r\n                                strokeWidth : 2,\r\n                            } ;\r\n\r\n                            fetch('http://localhost:8080/', {\r\n                                method  : 'POST',\r\n                                headers : {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(updatedCircleData),\r\n                            }) ;\r\n\r\n                        }\r\n\r\n                    }) ; \r\n\r\n                }) ;\r\n\r\n            },\r\n\r\n            drawEllipse : function (){\r\n\r\n                var width  = window.innerWidth  ;\r\n                var height = window.innerHeight ;\r\n\r\n                let ellipse = document.querySelector(\".ellipse\") ;\r\n                let radiusX = document.querySelector(\"#radiusX\") ;\r\n                let radiusY = document.querySelector(\"#radiusY\") ;\r\n\r\n                var stage     = new Konva.Stage({\r\n                    container : 'container',\r\n                    width     : width,\r\n                    height    : height,\r\n                }) ;\r\n\r\n                ellipse.style.left = \"-11%\"  ;\r\n\r\n                radiusX = parseFloat(radiusX.value) ;\r\n                radiusY = parseFloat(radiusY.value) ; \r\n\r\n                stage.add(layer) ;\r\n\r\n                var selectedColorSpan = null ;\r\n\r\n                newCircle    = null ;\r\n                newTriangle  = null ;\r\n                newRectangle = null ;\r\n                newSquare    = null ;\r\n\r\n                stage.on('mousedown', function () {\r\n                    var pos = stage.getPointerPosition() ;\r\n                    newEllipse   = new Konva.Ellipse({\r\n                        x            : pos.x,\r\n                        y            : pos.y,\r\n                        radiusX      : radiusX,\r\n                        radiusY      : radiusY,\r\n                        fill         : 'white',\r\n                        stroke       : 'black',\r\n                        strokeWidth  : 2,\r\n                    }) ;\r\n\r\n                    layer.add(newEllipse) ;\r\n\r\n                    if (newEllipse){\r\n\r\n                        const EllipseData = {\r\n                            shape       : 'ellipse',\r\n                            x           : pos.x,\r\n                            y           : pos.y,\r\n                            radiusX     : radiusX,\r\n                            radiusY     : radiusY,\r\n                            fill        : 'white',\r\n                            stroke      : 'black',\r\n                            strokeWidth : 2,\r\n                        } ;\r\n                            \r\n                        fetch('http://localhost:8080/', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            },\r\n                            body: JSON.stringify(EllipseData),\r\n                        })\r\n\r\n                        \r\n                        newEllipse.on('transformend', () => {\r\n\r\n                            const updatedRadiusX = newEllipse.radiusX() * newEllipse.scaleX() ;\r\n                            const updatedRadiusY = newEllipse.radiusY() * newEllipse.scaleY() ;\r\n\r\n                            const updatedEllipseData = {\r\n                                shape       : 'ellipse',\r\n                                x           : newEllipse.position().x,\r\n                                y           : newEllipse.position().y,\r\n                                radiusX     : updatedRadiusX,\r\n                                radiusY     : updatedRadiusY,\r\n                                fill        : newEllipse.fill(),\r\n                                stroke      : 'black',\r\n                                strokeWidth : 2,\r\n                            };\r\n\r\n                            fetch('http://localhost:8080/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(updatedEllipseData),\r\n                            }) ;\r\n\r\n                        }) ;\r\n\r\n                    }\r\n\r\n                }) ;\r\n                                \r\n                var colorSpans = document.querySelectorAll('.color-span') ;\r\n\r\n                colorSpans.forEach((span) => {\r\n                    span.addEventListener('click', () => {\r\n                        selectedColorSpan = span ;\r\n                        this.changeColor(newEllipse, selectedColorSpan, layer) ;\r\n                        \r\n                        if (newEllipse){\r\n\r\n                            const updatedRadiusX = newEllipse.radiusX() * newEllipse.scaleX() ;\r\n                            const updatedRadiusY = newEllipse.radiusY() * newEllipse.scaleY() ;\r\n\r\n                            const updatedEllipseData = {\r\n                                shape       : 'ellipse',\r\n                                x           : newEllipse.position().x,\r\n                                y           : newEllipse.position().y,\r\n                                radiusX     : updatedRadiusX,\r\n                                radiusY     : updatedRadiusY,\r\n                                fill        : newEllipse.fill(),\r\n                                stroke      : 'black',\r\n                                strokeWidth : 2,\r\n                            };\r\n\r\n                            fetch('http://localhost:8080/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(updatedEllipseData),\r\n                            }) ;\r\n\r\n                        }  \r\n                            \r\n                    }) ; \r\n\r\n                }) ;\r\n\r\n            },\r\n\r\n            drawTriangle : function(){\r\n\r\n                var width  = window.innerWidth  ;\r\n                var height = window.innerHeight ;\r\n\r\n                let triangle = document.querySelector(\".triangle\") ;\r\n\r\n                var stage = new Konva.Stage({\r\n                    container : 'container',\r\n                    width     : width,\r\n                    height    : height,\r\n                }) ;\r\n\r\n                triangle.style.left = \"-11%\" ;\r\n\r\n                stage.add(layer) ;\r\n\r\n                var point1, point2, point3 ;\r\n\r\n                var selectedColorSpan = null ;\r\n\r\n                newCircle    = null ;\r\n                newEllipse   = null ;\r\n                newRectangle = null ;\r\n                newSquare    = null ;\r\n\r\n                stage.on('mousedown', function () {\r\n\r\n                    if (!point1) \r\n                        point1 = stage.getPointerPosition() ;\r\n                    \r\n                    else if (!point2)\r\n                        point2 = stage.getPointerPosition() ;\r\n\r\n                    else {\r\n                        point3 = stage.getPointerPosition() ;\r\n\r\n                            newTriangle = new Konva.Line({\r\n                                points      : [point1.x, point1.y, point2.x, point2.y, point3.x, point3.y],\r\n                                closed      : true,\r\n                                stroke      : 'black',\r\n                                strokeWidth : 2,\r\n                            });  \r\n\r\n                        layer.add(newTriangle) ;\r\n\r\n                        if (newTriangle){    \r\n\r\n                            const TriangleData = {\r\n                                shape       : 'triangle',\r\n                                points      : [point1.x, point1.y, point2.x, point2.y, point3.x, point3.y],\r\n                                closed      : true,\r\n                                fill        : 'white',\r\n                                stroke      : 'black',\r\n                                strokeWidth : 2,\r\n                            } ;\r\n\r\n                            fetch('http://localhost:8080/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(TriangleData),\r\n                            })\r\n\r\n                            \r\n                            newTriangle.on('transformend', () => {\r\n\r\n                                const scaleX = newTriangle.scaleX() ;\r\n                                const scaleY = newTriangle.scaleY() ;\r\n\r\n                                const originalPoints = [\r\n                                    newTriangle.points()[0],\r\n                                    newTriangle.points()[1],\r\n                                    newTriangle.points()[2],\r\n                                    newTriangle.points()[3],\r\n                                    newTriangle.points()[4],\r\n                                    newTriangle.points()[5]\r\n                                ] ;\r\n\r\n                                const updatedPoints = originalPoints.map((point, index) => index % 2 === 0 ? point * scaleX : point * scaleY) ;\r\n\r\n                                    const updatedTriangleData = {\r\n                                        shape       : 'triangle',\r\n                                        points      : updatedPoints,                                \r\n                                        closed      : true,\r\n                                        fill        : newTriangle.fill(),\r\n                                        stroke      : 'black',\r\n                                        strokeWidth : 2,\r\n                                    } ;\r\n\r\n                                    fetch('http://localhost:8080/', {\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json',\r\n                                        },\r\n                                        body: JSON.stringify(updatedTriangleData),\r\n                                    }) ;\r\n                            \r\n                            }) ;\r\n                        \r\n                        }   \r\n\r\n                        point1 = null ;\r\n                        point2 = null ;\r\n                        point3 = null ;\r\n\r\n                    }\r\n\r\n                }) ;\r\n\r\n                var colorSpans = document.querySelectorAll('.color-span') ;\r\n\r\n                colorSpans.forEach((span) => {\r\n                    span.addEventListener('click', () => {\r\n                        selectedColorSpan = span ;\r\n                        this.changeColor(newTriangle, selectedColorSpan, layer) ;\r\n\r\n                        if(newTriangle){\r\n\r\n                            const scaleX = newTriangle.scaleX() ;\r\n                            const scaleY = newTriangle.scaleY() ;\r\n\r\n                            const originalPoints = [\r\n                                newTriangle.points()[0],\r\n                                newTriangle.points()[1],\r\n                                newTriangle.points()[2],\r\n                                newTriangle.points()[3],\r\n                                newTriangle.points()[4],\r\n                                newTriangle.points()[5]\r\n                            ] ;\r\n\r\n                            const updatedPoints = originalPoints.map((point, index) => index % 2 === 0 ? point * scaleX : point * scaleY) ;\r\n\r\n                            const updatedTriangleData = {\r\n                                shape       : 'triangle',\r\n                                points      : updatedPoints,                                \r\n                                closed      : true,\r\n                                fill        : newTriangle.fill(),\r\n                                stroke      : 'black',\r\n                                strokeWidth : 2,\r\n                            } ;\r\n\r\n                            fetch('http://localhost:8080/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(updatedTriangleData),\r\n                            }) ;\r\n\r\n                        }    \r\n\r\n                    }) ;\r\n                     \r\n                }) ;\r\n\r\n                point1 = null ;\r\n                point2 = null ;\r\n                point3 = null ;\r\n\r\n            },\r\n\r\n            drawRectangle : function(){\r\n\r\n                var Width  = window.innerWidth  ;\r\n                var Height = window.innerHeight ;\r\n\r\n                let rectangle = document.querySelector(\".rectangle\") ;\r\n                let width     = document.querySelector(\"#width\")     ;\r\n                let height    = document.querySelector(\"#height\")    ;\r\n\r\n                var stage     = new Konva.Stage({\r\n                    container : 'container',\r\n                    width     : Width,\r\n                    height    : Height,\r\n                }) ;\r\n\r\n                rectangle.style.left = \"-11%\" ;\r\n\r\n                width  = parseFloat(width.value)  ;\r\n                height = parseFloat(height.value) ; \r\n\r\n                stage.add(layer) ;\r\n\r\n                var selectedColorSpan = null ;\r\n\r\n                newCircle    = null ;\r\n                newEllipse   = null ;\r\n                newTriangle  = null ;\r\n                newSquare    = null ;\r\n\r\n                stage.on('mousedown', function () {\r\n                    var pos = stage.getPointerPosition() ;\r\n                        newRectangle   = new Konva.Rect({\r\n                        x            : pos.x,\r\n                        y            : pos.y,\r\n                        width        : width,\r\n                        height       : height,\r\n                        fill         : 'white',\r\n                        stroke       : 'black',\r\n                        strokeWidth  : 2,\r\n                    }) ;\r\n\r\n                    layer.add(newRectangle) ;\r\n\r\n                    if (newRectangle){\r\n\r\n                        const RectangleData = {\r\n                            shape        : 'rectangle',\r\n                            x            : pos.x,\r\n                            y            : pos.y,\r\n                            width        : width,\r\n                            height       : height,\r\n                            fill         : 'white',\r\n                            stroke       : 'black',\r\n                            strokeWidth  : 2,\r\n                        } ;\r\n                            \r\n                        fetch('http://localhost:8080/', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            },\r\n                            body: JSON.stringify(RectangleData),\r\n                        })\r\n\r\n                        \r\n                        newRectangle.on('transformend', () => {\r\n\r\n                            const updatedWidth  = newRectangle.width()  * newRectangle.scaleX() ;\r\n                            const updatedHeight = newRectangle.height() * newRectangle.scaleY() ;\r\n\r\n                            const updatedRectangleData = {\r\n                                shape        : 'rectangle',\r\n                                x            : newRectangle.position().x,\r\n                                y            : newRectangle.position().y,\r\n                                width        : updatedWidth,\r\n                                height       : updatedHeight,\r\n                                fill         : newRectangle.fill(),\r\n                                stroke       : 'black',\r\n                                strokeWidth  : 2,\r\n                            } ;\r\n\r\n                            fetch('http://localhost:8080/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(updatedRectangleData),\r\n                            }) ;\r\n\r\n                        }) ;\r\n\r\n                    } \r\n\r\n                }) ;\r\n\r\n                var colorSpans = document.querySelectorAll('.color-span') ;\r\n\r\n                colorSpans.forEach((span) => {\r\n                    span.addEventListener('click', () => {\r\n                        selectedColorSpan = span ;\r\n                        this.changeColor(newRectangle, selectedColorSpan, layer) ;\r\n\r\n                        if (newTriangle){\r\n                        \r\n                            const updatedWidth  = newRectangle.width()  * newRectangle.scaleX() ;\r\n                            const updatedHeight = newRectangle.height() * newRectangle.scaleY() ;\r\n\r\n                            const updatedRectangleData = {\r\n                                shape        : 'rectangle',\r\n                                x            : newRectangle.position().x,\r\n                                y            : newRectangle.position().y,\r\n                                width        : updatedWidth,\r\n                                height       : updatedHeight,\r\n                                fill         : newRectangle.fill(),\r\n                                stroke       : 'black',\r\n                                strokeWidth  : 2,\r\n                            } ;\r\n\r\n                            fetch('http://localhost:8080/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(updatedRectangleData),\r\n                            }) ;\r\n\r\n                        }    \r\n\r\n                    }) ; \r\n                        \r\n                }) ;\r\n\r\n            },\r\n\r\n            drawSquare : function(){\r\n\r\n                var Width  = window.innerWidth  ;\r\n                var Height = window.innerHeight ;\r\n\r\n                let square = document.querySelector(\".square\") ;\r\n                let length = document.querySelector(\"#length\") ;\r\n                \r\n                var stage     = new Konva.Stage({\r\n                    container : 'container',\r\n                    width     : Width,\r\n                    height    : Height,\r\n                }) ;\r\n\r\n                square.style.left = \"-11%\" ;\r\n\r\n                length = parseFloat(length.value) ;\r\n                \r\n                stage.add(layer) ;\r\n\r\n                var selectedColorSpan = null ;\r\n                \r\n                newCircle    = null ;\r\n                newEllipse   = null ;\r\n                newTriangle  = null ;\r\n                newRectangle = null ;\r\n\r\n                stage.on('mousedown', function () {\r\n                    var pos = stage.getPointerPosition() ;\r\n                        newSquare   = new Konva.Rect({\r\n                        x            : pos.x,\r\n                        y            : pos.y,\r\n                        width        : length,\r\n                        height       : length,\r\n                        fill         : 'white',\r\n                        stroke       : 'black',\r\n                        strokeWidth  : 2,\r\n                    }) ;\r\n\r\n                    layer.add(newSquare) ;\r\n\r\n                    if (newSquare){\r\n\r\n                        const SquareData = {\r\n                            shape        : 'square',\r\n                            x            : pos.x,\r\n                            y            : pos.y,\r\n                            width        : length,\r\n                            height       : length,\r\n                            fill         : 'white',\r\n                            stroke       : 'black',\r\n                            strokeWidth  : 2,\r\n                        } ;\r\n                            \r\n                        fetch('http://localhost:8080/', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            },\r\n                            body: JSON.stringify(SquareData),\r\n                        })\r\n                    \r\n                        newSquare.on('transformend', () => {\r\n\r\n                            const updatedLength  = newSquare.width() * newSquare.scaleX() ;\r\n                            \r\n                            const updatedSquareData = {\r\n                                shape        : 'square',\r\n                                x            : newSquare.position().x,\r\n                                y            : newSquare.position().y,\r\n                                width        : updatedLength,\r\n                                height       : updatedLength,\r\n                                fill         : newSquare.fill(),\r\n                                stroke       : 'black',\r\n                                strokeWidth  : 2,\r\n                            } ;\r\n\r\n                            fetch('http://localhost:8080/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(updatedSquareData),\r\n                            }) ;\r\n\r\n                        }) ;\r\n\r\n                    }    \r\n\r\n                }) ;\r\n\r\n                var colorSpans = document.querySelectorAll('.color-span') ;\r\n\r\n                colorSpans.forEach((span) => {\r\n                    span.addEventListener('click', () => {\r\n                        selectedColorSpan = span ;\r\n                        this.changeColor(newSquare, selectedColorSpan, layer) ;\r\n\r\n                        if (newSquare){\r\n\r\n                            const updatedLength  = newSquare.width() * newSquare.scaleX() ;\r\n                            \r\n                            const updatedSquareData = {\r\n                                shape        : 'square',\r\n                                x            : newSquare.position().x,\r\n                                y            : newSquare.position().y,\r\n                                width        : updatedLength,\r\n                                height       : updatedLength,\r\n                                fill         : newSquare.fill(),\r\n                                stroke       : 'black',\r\n                                strokeWidth  : 2,\r\n                            } ;\r\n\r\n                            fetch('http://localhost:8080/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(updatedSquareData),\r\n                            }) ;\r\n\r\n                        }    \r\n\r\n                    }) ; \r\n\r\n                }) \r\n\r\n            },\r\n            \r\n            showHideShapeBar : function (){\r\n                // let loadXML      = document.querySelector('.loadXML')      ;\r\n                let loadJSON     = document.querySelector('.loadFile')     ;\r\n                let saveXML      = document.querySelector('.saveXML')      ;\r\n                let saveJSON     = document.querySelector('.saveJSON')     ;\r\n                let colorPalette = document.querySelector('.colorPalette') ;\r\n                let shapeBar     = document.querySelector('.shapeBar')     ;\r\n                let line         = document.querySelector(\".line\")         ;\r\n                let circle       = document.querySelector(\".circle\")       ;   \r\n                let ellipse      = document.querySelector(\".ellipse\")      ;\r\n                let triangle     = document.querySelector(\".triangle\")     ;\r\n                let rectangle    = document.querySelector(\".rectangle\")    ;\r\n                let square       = document.querySelector(\".square\")       ; \r\n\r\n                if (colorPalette.style.opacity === \"1\"){ \r\n\r\n                    colorPalette.style.opacity = \"0\" ;\r\n\r\n                    if (loadXML.style.left === \"5%\" || saveXML.style.left === \"5%\"){ \r\n\r\n                        // loadXML.style.left  = \"-35%\" ;\r\n                        loadJSON.style.left = \"-35%\" ;\r\n\r\n                        saveXML.style.left  = \"-35%\" ;\r\n                        saveJSON.style.left = \"-35%\" ;\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"5%\" ;\r\n                        }, 600) ;\r\n                \r\n                    }\r\n\r\n                    else{\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"5%\"   ;\r\n                        }, 500) ;\r\n                    }\r\n\r\n                }\r\n\r\n                else if (loadXML.style.left === \"5%\" || saveXML.style.left === \"5%\"){ \r\n\r\n                    loadXML.style.left  = \"-35%\" ;\r\n                    loadJSON.style.left = \"-35%\" ;\r\n\r\n                    saveXML.style.left  = \"-35%\" ;\r\n                    saveJSON.style.left = \"-35%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        shapeBar.style.left = \"5%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n                \r\n                else if (line.style.left === \"12%\"){\r\n\r\n                    line.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        shapeBar.style.left = \"-2%\"   ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (circle.style.left === \"12%\"){\r\n                    circle.style.left = \"-11%\"\r\n\r\n                    setTimeout(() => {\r\n                        shapeBar.style.left = \"-2%\"   ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (ellipse.style.left === \"12%\"){\r\n                    ellipse.style.left = \"-11%\"\r\n\r\n                    setTimeout(() => {\r\n                        shapeBar.style.left = \"-2%\"   ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (triangle.style.left === \"12%\"){\r\n                    triangle.style.left = \"-11%\"\r\n\r\n                    setTimeout(() => {\r\n                        shapeBar.style.left = \"-2%\"   ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (rectangle.style.left === \"12%\"){\r\n                    rectangle.style.left = \"-11%\"\r\n\r\n                    setTimeout(() => {\r\n                        shapeBar.style.left = \"-2%\"   ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (square.style.left === \"12%\"){\r\n                    square.style.left = \"-11%\"\r\n\r\n                    setTimeout(() => {\r\n                        shapeBar.style.left = \"-2%\"   ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else{\r\n                    if (shapeBar.style.left === \"5%\")\r\n                        shapeBar.style.left = \"-2%\" ;\r\n                    else\r\n                        shapeBar.style.left = \"5%\"   ;\r\n                }\r\n\r\n            },\r\n\r\n            showHideColorPalette : function (){\r\n                let colorPalette = document.querySelector('.colorPalette') ;\r\n                let shapeBar     = document.querySelector('.shapeBar')     ;\r\n                let line         = document.querySelector(\".line\")         ;\r\n                let circle       = document.querySelector(\".circle\")       ;   \r\n                let ellipse      = document.querySelector(\".ellipse\")      ;\r\n                let triangle     = document.querySelector(\".triangle\")     ;\r\n                let rectangle    = document.querySelector(\".rectangle\")    ;\r\n                let square       = document.querySelector(\".square\")       ; \r\n                \r\n                if (shapeBar.style.left === \"5%\"){\r\n\r\n                    if (line.style.left === \"12%\"){\r\n                    \r\n                        line.style.left = \"-11%\" ;\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            colorPalette.style.opacity = \"1\" ;\r\n                        }, 400) ;\r\n\r\n                    }\r\n\r\n                    else if (circle.style.left === \"12%\"){\r\n                        circle.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            colorPalette.style.opacity = \"1\" ;\r\n                        }, 400) ;\r\n\r\n                    }\r\n\r\n                    else if (ellipse.style.left === \"12%\"){\r\n                        ellipse.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            colorPalette.style.opacity = \"1\" ;\r\n                        }, 400) ;\r\n\r\n                    }\r\n\r\n                    else if (triangle.style.left === \"12%\"){\r\n                        triangle.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            colorPalette.style.opacity = \"1\" ;\r\n                        }, 400) ;\r\n\r\n\r\n                    }\r\n\r\n                    else if (rectangle.style.left === \"12%\"){\r\n                        rectangle.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            colorPalette.style.opacity = \"1\" ;\r\n                        }, 400) ;\r\n\r\n\r\n                    }\r\n\r\n                    else if (square.style.left === \"12%\"){\r\n                        square.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            colorPalette.style.opacity = \"1\" ;\r\n                        }, 400) ;\r\n\r\n\r\n                    }\r\n\r\n                    else{\r\n                        \r\n                        shapeBar.style.left = \"-2%\" ;\r\n                    \r\n                        setTimeout(() => {\r\n                            colorPalette.style.opacity = \"1\" ;\r\n                        }, 200) ;\r\n\r\n                    }\r\n                    \r\n                }\r\n                \r\n                else{\r\n                    if (colorPalette.style.opacity === \"1\") \r\n                        colorPalette.style.opacity = \"0\" ;\r\n                    else \r\n                        colorPalette.style.opacity = \"1\" ;\r\n                }\r\n            \r\n            },\r\n\r\n            showHideLineOption : function(){\r\n                let line      = document.querySelector(\".line\")      ;\r\n                let circle    = document.querySelector(\".circle\")    ;\r\n                let ellipse   = document.querySelector(\".ellipse\")   ;\r\n                let triangle  = document.querySelector(\".triangle\")  ;\r\n                let rectangle = document.querySelector(\".rectangle\") ;\r\n                let square    = document.querySelector(\".square\")    ;\r\n            \r\n                if (circle.style.left === \"12%\"){\r\n                    circle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        line.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (ellipse.style.left === \"12%\"){\r\n                    ellipse.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        line.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (triangle.style.left === \"12%\"){\r\n                    triangle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        line.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (rectangle.style.left === \"12%\"){\r\n                    rectangle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        line.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (square.style.left === \"12%\"){\r\n                    square.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        line.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (line.style.left === \"12%\")\r\n                        line.style.left = \"-11%\" ;\r\n                    else\r\n                        line.style.left = \"12%\"\r\n\r\n                }\r\n            \r\n            },\r\n\r\n            showHideCircleOption : function(){\r\n                let line      = document.querySelector(\".line\")      ;\r\n                let circle    = document.querySelector(\".circle\")    ;\r\n                let ellipse   = document.querySelector(\".ellipse\")   ;\r\n                let triangle  = document.querySelector(\".triangle\")  ;\r\n                let rectangle = document.querySelector(\".rectangle\") ;\r\n                let square    = document.querySelector(\".square\")    ;\r\n            \r\n                if (line.style.left === \"12%\"){\r\n                    line.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        circle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (ellipse.style.left === \"12%\"){\r\n                    ellipse.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        circle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (triangle.style.left === \"12%\"){\r\n                    triangle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        circle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (rectangle.style.left === \"12%\"){\r\n                    rectangle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        circle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (square.style.left === \"12%\"){\r\n                    square.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        circle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (circle.style.left === \"12%\")\r\n                        circle.style.left = \"-11%\" ;\r\n                    else\r\n                        circle.style.left = \"12%\"  ;\r\n\r\n                }\r\n            \r\n            },\r\n\r\n            showHideEllipseOption : function(){\r\n                let line      = document.querySelector(\".line\")      ;\r\n                let circle    = document.querySelector(\".circle\")    ;\r\n                let ellipse   = document.querySelector(\".ellipse\")   ;\r\n                let triangle  = document.querySelector(\".triangle\")  ;\r\n                let rectangle = document.querySelector(\".rectangle\") ;\r\n                let square    = document.querySelector(\".square\")    ;\r\n            \r\n                if (line.style.left === \"12%\"){\r\n                    line.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        ellipse.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (circle.style.left === \"12%\"){\r\n                    circle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        ellipse.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (triangle.style.left === \"12%\"){\r\n                    triangle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        ellipse.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (rectangle.style.left === \"12%\"){\r\n                    rectangle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        ellipse.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (square.style.left === \"12%\"){\r\n                    square.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        ellipse.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (ellipse.style.left === \"12%\")\r\n                        ellipse.style.left = \"-11%\" ;\r\n                    else\r\n                        ellipse.style.left = \"12%\"  ;\r\n\r\n                }\r\n            \r\n            },\r\n\r\n            showHideTriangleOption : function(){\r\n                let line      = document.querySelector(\".line\")      ;\r\n                let circle    = document.querySelector(\".circle\")    ;\r\n                let ellipse   = document.querySelector(\".ellipse\")   ;\r\n                let triangle  = document.querySelector(\".triangle\")  ;\r\n                let rectangle = document.querySelector(\".rectangle\") ;\r\n                let square    = document.querySelector(\".square\")    ;\r\n            \r\n                if (line.style.left === \"12%\"){\r\n                    line.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        triangle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (circle.style.left === \"12%\"){\r\n                    circle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        triangle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (ellipse.style.left === \"12%\"){\r\n                    ellipse.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        triangle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (rectangle.style.left === \"12%\"){\r\n                    rectangle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        triangle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (square.style.left === \"12%\"){\r\n                    square.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        triangle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (triangle.style.left === \"12%\")\r\n                        triangle.style.left = \"-11%\" ;\r\n                    else\r\n                        triangle.style.left = \"12%\"  ;\r\n\r\n                }\r\n            \r\n            },\r\n\r\n            showHideSave : function(){\r\n\r\n                let saveXML   = document.querySelector('.saveXML')   ;\r\n                let saveJSON  = document.querySelector('.saveJSON')  ;\r\n                let shapeBar  = document.querySelector('.shapeBar')  ;\r\n                let line      = document.querySelector(\".line\")      ;\r\n                let circle    = document.querySelector(\".circle\")    ;   \r\n                let ellipse   = document.querySelector(\".ellipse\")   ;\r\n                let triangle  = document.querySelector(\".triangle\")  ;\r\n                let rectangle = document.querySelector(\".rectangle\") ;\r\n                let square    = document.querySelector(\".square\")    ; \r\n\r\n                if (shapeBar.style.left === \"5%\"){\r\n\r\n                    if (line.style.left === \"12%\"){\r\n                    \r\n                        line.style.left = \"-11%\" ;\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            saveXML.style.left  = \"5%\" ;\r\n                            saveJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n                    }\r\n\r\n                    else if (circle.style.left === \"12%\"){\r\n                        circle.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            saveXML.style.left  = \"5%\" ;\r\n                            saveJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n                    }\r\n\r\n                    else if (ellipse.style.left === \"12%\"){\r\n                        ellipse.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            saveXML.style.left  = \"5%\" ;\r\n                            saveJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n                    }\r\n\r\n                    else if (triangle.style.left === \"12%\"){\r\n                        triangle.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            saveXML.style.left  = \"5%\" ;\r\n                            saveJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n\r\n                    }\r\n\r\n                    else if (rectangle.style.left === \"12%\"){\r\n                        rectangle.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            saveXML.style.left  = \"5%\" ;\r\n                            saveJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n\r\n                    }\r\n\r\n                    else if (square.style.left === \"12%\"){\r\n                        square.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            saveXML.style.left  = \"5%\" ;\r\n                            saveJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n\r\n                    }\r\n\r\n                    else{\r\n                        \r\n                        shapeBar.style.left = \"-2%\" ;\r\n                    \r\n                        setTimeout(() => {\r\n                            saveXML.style.left  = \"5%\" ;\r\n                            saveJSON.style.left = \"5%\" ;\r\n                        }, 200) ;\r\n\r\n                    }\r\n                    \r\n                }\r\n\r\n                else{\r\n                    if (saveXML.style.left === \"5%\" ){\r\n\r\n                        saveXML.style.left  = \"-35%\" ;\r\n                        saveJSON.style.left = \"-35%\" ;\r\n                    } \r\n                    else{\r\n                        saveXML.style.left  = \"5%\" ;\r\n                        saveJSON.style.left = \"5%\" ;\r\n                    }\r\n\r\n                }\r\n\r\n                },\r\n\r\n\r\n            showHideLoad : function(){\r\n\r\n                let loadXML   = document.querySelector('.loadXML')   ;\r\n                let loadJSON  = document.querySelector('.loadJSON')  ;\r\n                let shapeBar  = document.querySelector('.shapeBar')  ;\r\n                let line      = document.querySelector(\".line\")      ;\r\n                let circle    = document.querySelector(\".circle\")    ;   \r\n                let ellipse   = document.querySelector(\".ellipse\")   ;\r\n                let triangle  = document.querySelector(\".triangle\")  ;\r\n                let rectangle = document.querySelector(\".rectangle\") ;\r\n                let square    = document.querySelector(\".square\")    ; \r\n                \r\n                if (shapeBar.style.left === \"5%\"){\r\n\r\n                    if (line.style.left === \"12%\"){\r\n                    \r\n                        line.style.left = \"-11%\" ;\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            loadXML.style.left  = \"5%\" ;\r\n                            loadJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n                    }\r\n\r\n                    else if (circle.style.left === \"12%\"){\r\n                        circle.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            loadXML.style.left  = \"5%\" ;\r\n                            loadJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n                    }\r\n\r\n                    else if (ellipse.style.left === \"12%\"){\r\n                        ellipse.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            loadXML.style.left  = \"5%\" ;\r\n                            loadJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n                    }\r\n\r\n                    else if (triangle.style.left === \"12%\"){\r\n                        triangle.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            loadXML.style.left  = \"5%\" ;\r\n                            loadJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n\r\n                    }\r\n\r\n                    else if (rectangle.style.left === \"12%\"){\r\n                        rectangle.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            loadXML.style.left  = \"5%\" ;\r\n                            loadJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n\r\n                    }\r\n\r\n                    else if (square.style.left === \"12%\"){\r\n                        square.style.left = \"-11%\"\r\n\r\n                        setTimeout(() => {\r\n                            shapeBar.style.left = \"-2%\"   ;\r\n                        }, 200) ;\r\n\r\n                        setTimeout(() => {\r\n                            loadXML.style.left  = \"5%\" ;\r\n                            loadJSON.style.left = \"5%\" ;\r\n                        }, 700) ;\r\n\r\n                    }\r\n\r\n                    else{\r\n                        \r\n                        shapeBar.style.left = \"-2%\" ;\r\n                    \r\n                        setTimeout(() => {\r\n                            loadXML.style.left  = \"5%\" ;\r\n                            loadJSON.style.left = \"5%\" ;\r\n                        }, 200) ;\r\n\r\n                    }\r\n                    \r\n                }\r\n                \r\n                else{\r\n                    if (loadXML.style.left === \"5%\" ){\r\n\r\n                        loadXML.style.left  = \"-35%\" ;\r\n                        loadJSON.style.left = \"-35%\" ;\r\n                    } \r\n                    else{\r\n                        loadXML.style.left  = \"5%\" ;\r\n                        loadJSON.style.left = \"5%\" ;\r\n                    }\r\n\r\n                }\r\n\r\n            },\r\n\r\n            showHideRectangleOption : function(){\r\n                let line      = document.querySelector(\".line\")      ;\r\n                let circle    = document.querySelector(\".circle\")    ;\r\n                let ellipse   = document.querySelector(\".ellipse\")   ;\r\n                let triangle  = document.querySelector(\".triangle\")  ;\r\n                let rectangle = document.querySelector(\".rectangle\") ;\r\n                let square    = document.querySelector(\".square\")    ;\r\n            \r\n                if (line.style.left === \"12%\"){\r\n                    line.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        rectangle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (circle.style.left === \"12%\"){\r\n                    circle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        rectangle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (ellipse.style.left === \"12%\"){\r\n                    ellipse.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        rectangle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (triangle.style.left === \"12%\"){\r\n                    triangle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        rectangle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (square.style.left === \"12%\"){\r\n                    square.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        rectangle.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (rectangle.style.left === \"12%\")\r\n                        rectangle.style.left = \"-11%\" ;\r\n                    else\r\n                        rectangle.style.left = \"12%\"  ;\r\n\r\n                }\r\n            \r\n            },\r\n\r\n            showHideSquareOption : function(){\r\n                let line      = document.querySelector(\".line\")      ;\r\n                let circle    = document.querySelector(\".circle\")    ;\r\n                let ellipse   = document.querySelector(\".ellipse\")   ;\r\n                let triangle  = document.querySelector(\".triangle\")  ;\r\n                let rectangle = document.querySelector(\".rectangle\") ;\r\n                let square    = document.querySelector(\".square\")    ;\r\n            \r\n                if (line.style.left === \"12%\"){\r\n                    line.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        square.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (circle.style.left === \"12%\"){\r\n                    \r\n                    circle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        square.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (ellipse.style.left === \"12%\"){\r\n                    ellipse.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        square.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (triangle.style.left === \"12%\"){\r\n                    triangle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        square.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else if (rectangle.style.left === \"12%\"){\r\n                    rectangle.style.left = \"-11%\" ;\r\n\r\n                    setTimeout(() => {\r\n                        square.style.left = \"12%\" ;\r\n                    }, 200) ;\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    if (square.style.left === \"12%\")\r\n                        square.style.left = \"-11%\" ;\r\n                    else\r\n                        square.style.left = \"12%\"  ;\r\n\r\n                }\r\n            \r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n</script>\r\n  \r\n<style scoped>\r\n    \r\n    @import url('https://fonts.googleapis.com/css2?family=Goldman&display=swap');\r\n\r\n    .save div{\r\n        width       : 35%       ;\r\n        border      : 3px solid ;\r\n        padding     : 20px      ;\r\n        position    : fixed     ;\r\n        transition  : left 1s   ;\r\n        font-family : 'Goldman', sans-serif  ;\r\n        background-color           : white ;\r\n        border-top-right-radius    : 20px    ;\r\n        border-bottom-right-radius : 20px    ;\r\n    }\r\n\r\n    .saveXML{\r\n        left : -35% ;\r\n        top  : 65%  ;\r\n    }\r\n\r\n    .saveJSON{\r\n        left : -35% ;\r\n        top  : 73%  ;   \r\n    }\r\n\r\n    .load div{\r\n        width       : 35%       ;\r\n        border      : 3px solid ;\r\n        padding     : 20px      ;\r\n        position    : fixed     ;\r\n        transition  : left 1s   ;\r\n        font-family : 'Goldman', sans-serif  ;\r\n        background-color           : white ;\r\n        border-top-right-radius    : 20px    ;\r\n        border-bottom-right-radius : 20px    ;\r\n    }\r\n\r\n    .loadXML{\r\n        left : -35% ;\r\n        top  : 92%  ;\r\n    }\r\n\r\n    .loadJSON{\r\n\r\n        left : -35% ;\r\n        top  : 84%  ;   \r\n    }\r\n\r\n    .colorPalette{\r\n        left             : 5.5%         ;\r\n        top              : 15%          ;\r\n        width            : 220px        ;\r\n        height           : 170px        ;\r\n        border           : 1px solid    ;\r\n        position         : fixed        ;\r\n        border-radius    : 10px         ;\r\n        opacity          : 0            ;\r\n        transition       : opacity .5s  ;\r\n        background-color : white      ;\r\n    }  \r\n    .colorPalette span {\r\n        display       : inline-block ;\r\n        width         : 25px         ;\r\n        height        : 25px         ;\r\n        margin        : 5px          ;\r\n        border-radius : 5px          ;\r\n    }\r\n\r\n    .black {\r\n        background-color : black ;\r\n    }\r\n\r\n    .gray {\r\n        background-color : rgb(80, 80, 80) ;\r\n    }\r\n\r\n    .intermediateGray{\r\n        background-color : gray ;\r\n    }\r\n\r\n    .lightGray{\r\n        background-color : rgb(150, 150, 150) ;\r\n    }\r\n\r\n    .veryLightGray{\r\n        background-color : gainsboro ;\r\n    }\r\n\r\n    .white{\r\n        background-color : white    ;\r\n        border           : .1px solid ;\r\n    }\r\n\r\n    .red{\r\n        background-color : red ;\r\n    }\r\n\r\n    .lightRed{\r\n        background-color : rgb(255, 58, 91) ;\r\n    }\r\n\r\n    .pink{\r\n        background-color : rgb(255, 103, 247) ;\r\n    }\r\n\r\n    .lightPurple{\r\n        background-color : rgb(218, 110, 218) ;\r\n    }\r\n\r\n    .intermediatePurple{\r\n        background-color : rgb(167, 72, 255) ;\r\n    }\r\n\r\n    .purple{\r\n        background-color : rgb(94, 22, 177) ;\r\n    }\r\n\r\n    .sky{\r\n        background-color : rgb(2, 138, 192) ;\r\n    }\r\n\r\n    .intermediateSky{\r\n        background-color : rgb(87, 192, 233) ;\r\n    }\r\n\r\n    .lightSky{\r\n        background-color : rgb(127, 255, 255) ;\r\n    }\r\n\r\n    .lightBlue{\r\n        background-color : rgb(23, 186, 250) ;\r\n    }\r\n\r\n    .intermediateBlue{\r\n        background-color : rgb(74, 131, 255) ;\r\n    }\r\n\r\n    .blue{\r\n        background-color : rgb(18, 93, 255) ;\r\n    }\r\n\r\n    .green{\r\n        background-color : rgb(1, 177, 1) ;\r\n    }\r\n\r\n    .intermediateGreen{\r\n        background-color : rgb(147, 219, 40) ;\r\n    }\r\n\r\n    .lightGreen{\r\n        background-color : rgb(201, 255, 121)  ;\r\n    }\r\n\r\n    .yellow{\r\n        background-color : yellow ;\r\n    }\r\n\r\n    .lightOrange{\r\n        background-color : rgb(255, 205, 111) ;\r\n    }\r\n\r\n    .orange{\r\n        background-color : orange ;\r\n    }\r\n\r\n    .colorPalette span:hover{\r\n        opacity    : .6           ;\r\n        transition : opacity .2s  ;\r\n    }\r\n\r\n    .colorPalette span:active{\r\n        opacity    : .3          ;\r\n        transition : opacity .2s ;\r\n    }\r\n\r\n    .options div{\r\n        width       : 15%       ;\r\n        border      : 3px solid ;\r\n        padding     : 20px      ;\r\n        position    : fixed     ;\r\n        transition  : left .4s  ;\r\n        font-family : 'Goldman', sans-serif  ;\r\n        background-color           : white ;\r\n        border-top-right-radius    : 20px    ;\r\n        border-bottom-right-radius : 20px    ;\r\n    }\r\n\r\n    .options input{\r\n        width       : 60%  ;\r\n        margin      : 1px  ;\r\n        margin-left : 10px ;\r\n        font-family : 'Goldman', sans-serif  ;\r\n    }\r\n\r\n    .options .btn {\r\n        margin-top  : 5%  ;\r\n        margin-left : 70% ;\r\n    }\r\n\r\n    .options .line{\r\n        top      : 10%  ;\r\n        left     : -11% ;\r\n    }\r\n\r\n    .options .circle{\r\n        top      : 26.5%  ;\r\n        left     : -11%   ;\r\n    \r\n    }\r\n\r\n    .options .ellipse{\r\n        top      : 40%  ;\r\n        left     : -11% ;\r\n    }\r\n\r\n    .options .triangle{\r\n        top      : 55.5%  ;\r\n        left     : -11% ;\r\n    }\r\n\r\n    .options .rectangle{\r\n        top      : 71%  ;\r\n        left     : -11% ;\r\n    }\r\n\r\n    .options .square{\r\n        top      : 87%  ;\r\n        left     : -11% ;\r\n    }\r\n\r\n    .shapeBar{\r\n        background-color : rgb(30, 30, 30) ;\r\n        top              : 10%      ;\r\n        left             : -2%      ;\r\n        width            : 7%       ;\r\n        height           : 90vh     ;\r\n        z-index          : 2px      ;\r\n        position         : fixed    ;\r\n        transition       : left .4s ;\r\n    }\r\n    .shapeBar div{\r\n        height          : 17%    ;\r\n        display         : flex   ;\r\n        align-items     : center ;\r\n        justify-content : center ;\r\n    }\r\n\r\n    .shapeBar div:hover{\r\n        background-color : rgb(50, 50, 50)    ;\r\n        transition       : background-color .3s ;\r\n    }\r\n\r\n    .shapeBar div:active{\r\n        background-color: gray ;\r\n        transition      : background-color.2s ;\r\n    }\r\n\r\n    .sideBar{\r\n        background-color : black ;\r\n        top              : 10%     ;\r\n        width            : 5%      ;\r\n        height           : 90vh    ;\r\n        position         : fixed   ;\r\n    }\r\n    .sideBar div{\r\n        height          : 10%    ;\r\n        display         : flex   ;\r\n        align-items     : center ;\r\n        justify-content : center ;\r\n    }\r\n\r\n    .sideBar div:hover{\r\n        background-color : rgb(20, 20, 20)    ;\r\n        transition       : background-color .3s ;\r\n    }\r\n\r\n    .sideBar div:active{\r\n        background-color : gray ;\r\n        transition       : background-color.2s ;\r\n    }\r\n\r\n    #container{\r\n        left             : 5%     ;\r\n        top              : 10%    ;\r\n        width            : 95%    ;\r\n        height           : 100%   ;\r\n        position         : fixed  ;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}