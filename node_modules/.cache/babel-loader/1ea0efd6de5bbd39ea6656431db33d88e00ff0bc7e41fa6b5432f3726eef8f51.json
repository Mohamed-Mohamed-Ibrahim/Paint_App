{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sprite = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Animation_1 = require(\"../Animation\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass Sprite extends Shape_1.Shape {\n  constructor(config) {\n    super(config);\n    this._updated = true;\n    this.anim = new Animation_1.Animation(() => {\n      var updated = this._updated;\n      this._updated = false;\n      return updated;\n    });\n    this.on('animationChange.konva', function () {\n      this.frameIndex(0);\n    });\n    this.on('frameIndexChange.konva', function () {\n      this._updated = true;\n    });\n    this.on('frameRateChange.konva', function () {\n      if (!this.anim.isRunning()) {\n        return;\n      }\n      clearInterval(this.interval);\n      this._setInterval();\n    });\n  }\n  _sceneFunc(context) {\n    var anim = this.animation(),\n      index = this.frameIndex(),\n      ix4 = index * 4,\n      set = this.animations()[anim],\n      offsets = this.frameOffsets(),\n      x = set[ix4 + 0],\n      y = set[ix4 + 1],\n      width = set[ix4 + 2],\n      height = set[ix4 + 3],\n      image = this.image();\n    if (this.hasFill() || this.hasStroke()) {\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n    if (image) {\n      if (offsets) {\n        var offset = offsets[anim],\n          ix2 = index * 2;\n        context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n      } else {\n        context.drawImage(image, x, y, width, height, 0, 0, width, height);\n      }\n    }\n  }\n  _hitFunc(context) {\n    var anim = this.animation(),\n      index = this.frameIndex(),\n      ix4 = index * 4,\n      set = this.animations()[anim],\n      offsets = this.frameOffsets(),\n      width = set[ix4 + 2],\n      height = set[ix4 + 3];\n    context.beginPath();\n    if (offsets) {\n      var offset = offsets[anim];\n      var ix2 = index * 2;\n      context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n    } else {\n      context.rect(0, 0, width, height);\n    }\n    context.closePath();\n    context.fillShape(this);\n  }\n  _useBufferCanvas() {\n    return super._useBufferCanvas(true);\n  }\n  _setInterval() {\n    var that = this;\n    this.interval = setInterval(function () {\n      that._updateIndex();\n    }, 1000 / this.frameRate());\n  }\n  start() {\n    if (this.isRunning()) {\n      return;\n    }\n    var layer = this.getLayer();\n    this.anim.setLayers(layer);\n    this._setInterval();\n    this.anim.start();\n  }\n  stop() {\n    this.anim.stop();\n    clearInterval(this.interval);\n  }\n  isRunning() {\n    return this.anim.isRunning();\n  }\n  _updateIndex() {\n    var index = this.frameIndex(),\n      animation = this.animation(),\n      animations = this.animations(),\n      anim = animations[animation],\n      len = anim.length / 4;\n    if (index < len - 1) {\n      this.frameIndex(index + 1);\n    } else {\n      this.frameIndex(0);\n    }\n  }\n}\nexports.Sprite = Sprite;\nSprite.prototype.className = 'Sprite';\n(0, Global_1._registerNode)(Sprite);\nFactory_1.Factory.addGetterSetter(Sprite, 'animation');\nFactory_1.Factory.addGetterSetter(Sprite, 'animations');\nFactory_1.Factory.addGetterSetter(Sprite, 'frameOffsets');\nFactory_1.Factory.addGetterSetter(Sprite, 'image');\nFactory_1.Factory.addGetterSetter(Sprite, 'frameIndex', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Sprite, 'frameRate', 17, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.backCompat(Sprite, {\n  index: 'frameIndex',\n  getIndex: 'getFrameIndex',\n  setIndex: 'setFrameIndex'\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","Sprite","Factory_1","require","Shape_1","Animation_1","Validators_1","Global_1","Shape","constructor","config","_updated","anim","Animation","updated","on","frameIndex","isRunning","clearInterval","interval","_setInterval","_sceneFunc","context","animation","index","ix4","set","animations","offsets","frameOffsets","x","y","width","height","image","hasFill","hasStroke","beginPath","rect","closePath","fillStrokeShape","offset","ix2","drawImage","_hitFunc","fillShape","_useBufferCanvas","that","setInterval","_updateIndex","frameRate","start","layer","getLayer","setLayers","stop","len","length","prototype","className","_registerNode","Factory","addGetterSetter","getNumberValidator","backCompat","getIndex","setIndex"],"sources":["C:/Users/Al-Gawad/node_modules/konva/lib/shapes/Sprite.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sprite = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Animation_1 = require(\"../Animation\");\nconst Validators_1 = require(\"../Validators\");\nconst Global_1 = require(\"../Global\");\nclass Sprite extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this._updated = true;\n        this.anim = new Animation_1.Animation(() => {\n            var updated = this._updated;\n            this._updated = false;\n            return updated;\n        });\n        this.on('animationChange.konva', function () {\n            this.frameIndex(0);\n        });\n        this.on('frameIndexChange.konva', function () {\n            this._updated = true;\n        });\n        this.on('frameRateChange.konva', function () {\n            if (!this.anim.isRunning()) {\n                return;\n            }\n            clearInterval(this.interval);\n            this._setInterval();\n        });\n    }\n    _sceneFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (offsets) {\n                var offset = offsets[anim], ix2 = index * 2;\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n            }\n            else {\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\n            }\n        }\n    }\n    _hitFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\n        context.beginPath();\n        if (offsets) {\n            var offset = offsets[anim];\n            var ix2 = index * 2;\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n        }\n        else {\n            context.rect(0, 0, width, height);\n        }\n        context.closePath();\n        context.fillShape(this);\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _setInterval() {\n        var that = this;\n        this.interval = setInterval(function () {\n            that._updateIndex();\n        }, 1000 / this.frameRate());\n    }\n    start() {\n        if (this.isRunning()) {\n            return;\n        }\n        var layer = this.getLayer();\n        this.anim.setLayers(layer);\n        this._setInterval();\n        this.anim.start();\n    }\n    stop() {\n        this.anim.stop();\n        clearInterval(this.interval);\n    }\n    isRunning() {\n        return this.anim.isRunning();\n    }\n    _updateIndex() {\n        var index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\n        if (index < len - 1) {\n            this.frameIndex(index + 1);\n        }\n        else {\n            this.frameIndex(0);\n        }\n    }\n}\nexports.Sprite = Sprite;\nSprite.prototype.className = 'Sprite';\n(0, Global_1._registerNode)(Sprite);\nFactory_1.Factory.addGetterSetter(Sprite, 'animation');\nFactory_1.Factory.addGetterSetter(Sprite, 'animations');\nFactory_1.Factory.addGetterSetter(Sprite, 'frameOffsets');\nFactory_1.Factory.addGetterSetter(Sprite, 'image');\nFactory_1.Factory.addGetterSetter(Sprite, 'frameIndex', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Sprite, 'frameRate', 17, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.backCompat(Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex',\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}